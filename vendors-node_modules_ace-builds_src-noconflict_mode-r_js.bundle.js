/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkrobot_karol_4"] = self["webpackChunkrobot_karol_4"] || []).push([["vendors-node_modules_ace-builds_src-noconflict_mode-r_js"],{

/***/ "./node_modules/ace-builds/src-noconflict/mode-r.js":
/*!**********************************************************!*\
  !*** ./node_modules/ace-builds/src-noconflict/mode-r.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nace.define(\"ace/mode/tex_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){/*\n * tex_highlight_rules.js\n *\n * Copyright (C) 2009-11 by RStudio, Inc.\n *\n * The Initial Developer of the Original Code is\n * Ajax.org B.V.\n * Portions created by the Initial Developer are Copyright (C) 2010\n * the Initial Developer. All Rights Reserved.\n *\n * Distributed under the BSD license:\n *\n * Copyright (c) 2010, Ajax.org B.V.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *     * Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n *     * Neither the name of Ajax.org B.V. nor the\n *       names of its contributors may be used to endorse or promote products\n *       derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n *\n */\n\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar lang = require(\"../lib/lang\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar TexHighlightRules = function (textClass) {\n    if (!textClass)\n        textClass = \"text\";\n    this.$rules = {\n        \"start\": [\n            {\n                token: \"comment\",\n                regex: \"%.*$\"\n            }, {\n                token: textClass, // non-command\n                regex: \"\\\\\\\\[$&%#\\\\{\\\\}]\"\n            }, {\n                token: \"keyword\", // command\n                regex: \"\\\\\\\\(?:documentclass|usepackage|newcounter|setcounter|addtocounter|value|arabic|stepcounter|newenvironment|renewenvironment|ref|vref|eqref|pageref|label|cite[a-zA-Z]*|tag|begin|end|bibitem)\\\\b\",\n                next: \"nospell\"\n            }, {\n                token: \"keyword\", // command\n                regex: \"\\\\\\\\(?:[a-zA-Z0-9]+|[^a-zA-Z0-9])\"\n            }, {\n                token: \"paren.keyword.operator\",\n                regex: \"[[({]\"\n            }, {\n                token: \"paren.keyword.operator\",\n                regex: \"[\\\\])}]\"\n            }, {\n                token: textClass,\n                regex: \"\\\\s+\"\n            }\n        ],\n        \"nospell\": [\n            {\n                token: \"comment\",\n                regex: \"%.*$\",\n                next: \"start\"\n            }, {\n                token: \"nospell.\" + textClass, // non-command\n                regex: \"\\\\\\\\[$&%#\\\\{\\\\}]\"\n            }, {\n                token: \"keyword\", // command\n                regex: \"\\\\\\\\(?:documentclass|usepackage|newcounter|setcounter|addtocounter|value|arabic|stepcounter|newenvironment|renewenvironment|ref|vref|eqref|pageref|label|cite[a-zA-Z]*|tag|begin|end|bibitem)\\\\b\"\n            }, {\n                token: \"keyword\", // command\n                regex: \"\\\\\\\\(?:[a-zA-Z0-9]+|[^a-zA-Z0-9])\",\n                next: \"start\"\n            }, {\n                token: \"paren.keyword.operator\",\n                regex: \"[[({]\"\n            }, {\n                token: \"paren.keyword.operator\",\n                regex: \"[\\\\])]\"\n            }, {\n                token: \"paren.keyword.operator\",\n                regex: \"}\",\n                next: \"start\"\n            }, {\n                token: \"nospell.\" + textClass,\n                regex: \"\\\\s+\"\n            }, {\n                token: \"nospell.\" + textClass,\n                regex: \"\\\\w+\"\n            }\n        ]\n    };\n};\noop.inherits(TexHighlightRules, TextHighlightRules);\nexports.TexHighlightRules = TexHighlightRules;\n\n});\n\nace.define(\"ace/mode/r_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/text_highlight_rules\",\"ace/mode/tex_highlight_rules\"], function(require, exports, module){/*\n * r_highlight_rules.js\n *\n * Copyright (C) 2009-11 by RStudio, Inc.\n *\n * The Initial Developer of the Original Code is\n * Ajax.org B.V.\n * Portions created by the Initial Developer are Copyright (C) 2010\n * the Initial Developer. All Rights Reserved.\n *\n * Distributed under the BSD license:\n *\n * Copyright (c) 2010, Ajax.org B.V.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *     * Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n *     * Neither the name of Ajax.org B.V. nor the\n *       names of its contributors may be used to endorse or promote products\n *       derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n *\n */\nvar oop = require(\"../lib/oop\");\nvar lang = require(\"../lib/lang\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar TexHighlightRules = require(\"./tex_highlight_rules\").TexHighlightRules;\nvar RHighlightRules = function () {\n    var keywords = lang.arrayToMap((\"function|if|in|break|next|repeat|else|for|return|switch|while|try|tryCatch|stop|warning|require|library|attach|detach|source|setMethod|setGeneric|setGroupGeneric|setClass\")\n        .split(\"|\"));\n    var buildinConstants = lang.arrayToMap((\"NULL|NA|TRUE|FALSE|T|F|Inf|NaN|NA_integer_|NA_real_|NA_character_|\" +\n        \"NA_complex_\").split(\"|\"));\n    this.$rules = {\n        \"start\": [\n            {\n                token: \"comment.sectionhead\",\n                regex: \"#+(?!').*(?:----|====|####)\\\\s*$\"\n            },\n            {\n                token: \"comment\",\n                regex: \"#+'\",\n                next: \"rd-start\"\n            },\n            {\n                token: \"comment\",\n                regex: \"#.*$\"\n            },\n            {\n                token: \"string\", // multi line string start\n                regex: '[\"]',\n                next: \"qqstring\"\n            },\n            {\n                token: \"string\", // multi line string start\n                regex: \"[']\",\n                next: \"qstring\"\n            },\n            {\n                token: \"constant.numeric\", // hex\n                regex: \"0[xX][0-9a-fA-F]+[Li]?\\\\b\"\n            },\n            {\n                token: \"constant.numeric\", // explicit integer\n                regex: \"\\\\d+L\\\\b\"\n            },\n            {\n                token: \"constant.numeric\", // number\n                regex: \"\\\\d+(?:\\\\.\\\\d*)?(?:[eE][+\\\\-]?\\\\d*)?i?\\\\b\"\n            },\n            {\n                token: \"constant.numeric\", // number with leading decimal\n                regex: \"\\\\.\\\\d+(?:[eE][+\\\\-]?\\\\d*)?i?\\\\b\"\n            },\n            {\n                token: \"constant.language.boolean\",\n                regex: \"(?:TRUE|FALSE|T|F)\\\\b\"\n            },\n            {\n                token: \"identifier\",\n                regex: \"`.*?`\"\n            },\n            {\n                onMatch: function (value) {\n                    if (keywords[value])\n                        return \"keyword\";\n                    else if (buildinConstants[value])\n                        return \"constant.language\";\n                    else if (value == '...' || value.match(/^\\.\\.\\d+$/))\n                        return \"variable.language\";\n                    else\n                        return \"identifier\";\n                },\n                regex: \"[a-zA-Z.][a-zA-Z0-9._]*\\\\b\"\n            },\n            {\n                token: \"keyword.operator\",\n                regex: \"%%|>=|<=|==|!=|\\\\->|<\\\\-|\\\\|\\\\||&&|=|\\\\+|\\\\-|\\\\*|/|\\\\^|>|<|!|&|\\\\||~|\\\\$|:\"\n            },\n            {\n                token: \"keyword.operator\", // infix operators\n                regex: \"%.*?%\"\n            },\n            {\n                token: \"paren.keyword.operator\",\n                regex: \"[[({]\"\n            },\n            {\n                token: \"paren.keyword.operator\",\n                regex: \"[\\\\])}]\"\n            },\n            {\n                token: \"text\",\n                regex: \"\\\\s+\"\n            }\n        ],\n        \"qqstring\": [\n            {\n                token: \"string\",\n                regex: '(?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?\"',\n                next: \"start\"\n            },\n            {\n                token: \"string\",\n                regex: '.+'\n            }\n        ],\n        \"qstring\": [\n            {\n                token: \"string\",\n                regex: \"(?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?'\",\n                next: \"start\"\n            },\n            {\n                token: \"string\",\n                regex: '.+'\n            }\n        ]\n    };\n    var rdRules = new TexHighlightRules(\"comment\").getRules();\n    for (var i = 0; i < rdRules[\"start\"].length; i++) {\n        rdRules[\"start\"][i].token += \".virtual-comment\";\n    }\n    this.addRules(rdRules, \"rd-\");\n    this.$rules[\"rd-start\"].unshift({\n        token: \"text\",\n        regex: \"^\",\n        next: \"start\"\n    });\n    this.$rules[\"rd-start\"].unshift({\n        token: \"keyword\",\n        regex: \"@(?!@)[^ ]*\"\n    });\n    this.$rules[\"rd-start\"].unshift({\n        token: \"comment\",\n        regex: \"@@\"\n    });\n    this.$rules[\"rd-start\"].push({\n        token: \"comment\",\n        regex: \"[^%\\\\\\\\[({\\\\])}]+\"\n    });\n};\noop.inherits(RHighlightRules, TextHighlightRules);\nexports.RHighlightRules = RHighlightRules;\n\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(require, exports, module){\"use strict\";\nvar Range = require(\"../range\").Range;\nvar MatchingBraceOutdent = function () { };\n(function () {\n    this.checkOutdent = function (line, input) {\n        if (!/^\\s+$/.test(line))\n            return false;\n        return /^\\s*\\}/.test(input);\n    };\n    this.autoOutdent = function (doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n        if (!match)\n            return 0;\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({ row: row, column: column });\n        if (!openBracePos || openBracePos.row == row)\n            return 0;\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n    this.$getIndent = function (line) {\n        return line.match(/^\\s*/)[0];\n    };\n}).call(MatchingBraceOutdent.prototype);\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n\n});\n\nace.define(\"ace/mode/r\",[\"require\",\"exports\",\"module\",\"ace/unicode\",\"ace/range\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/text_highlight_rules\",\"ace/mode/r_highlight_rules\",\"ace/mode/matching_brace_outdent\"], function(require, exports, module){/*\n * r.js\n *\n * Copyright (C) 2009-11 by RStudio, Inc.\n *\n * The Initial Developer of the Original Code is\n * Ajax.org B.V.\n * Portions created by the Initial Developer are Copyright (C) 2010\n * the Initial Developer. All Rights Reserved.\n *\n * Distributed under the BSD license:\n *\n * Copyright (c) 2010, Ajax.org B.V.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *     * Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n *     * Neither the name of Ajax.org B.V. nor the\n *       names of its contributors may be used to endorse or promote products\n *       derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n *\n */\n\"use strict\";\nvar unicode = require(\"../unicode\");\nvar Range = require(\"../range\").Range;\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar RHighlightRules = require(\"./r_highlight_rules\").RHighlightRules;\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar Mode = function () {\n    this.HighlightRules = RHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.lineCommentStart = \"#\";\n    this.tokenRe = new RegExp(\"^[\" + unicode.wordChars + \"._]+\", \"g\");\n    this.nonTokenRe = new RegExp(\"^(?:[^\" + unicode.wordChars + \"._]|\\s])+\", \"g\");\n    this.$id = \"ace/mode/r\";\n    this.snippetFileId = \"ace/snippets/r\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/r\"], function(m) {\n                        if ( true && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            \n\n//# sourceURL=webpack://robot-karol-4/./node_modules/ace-builds/src-noconflict/mode-r.js?");

/***/ })

}]);