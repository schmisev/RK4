/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkrobot_karol_4"] = self["webpackChunkrobot_karol_4"] || []).push([["node_modules_ace-builds_src-noconflict_mode-rst_js"],{

/***/ "./node_modules/ace-builds/src-noconflict/mode-rst.js":
/*!************************************************************!*\
  !*** ./node_modules/ace-builds/src-noconflict/mode-rst.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nace.define(\"ace/mode/rst_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar lang = require(\"../lib/lang\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar RSTHighlightRules = function () {\n    var tokens = {\n        title: \"markup.heading\",\n        list: \"markup.heading\",\n        table: \"constant\",\n        directive: \"keyword.operator\",\n        entity: \"string\",\n        link: \"markup.underline.list\",\n        bold: \"markup.bold\",\n        italic: \"markup.italic\",\n        literal: \"support.function\",\n        comment: \"comment\"\n    };\n    var startStringPrefix = \"(^|\\\\s|[\\\"'(<\\\\[{\\\\-/:])\";\n    var endStringSuffix = \"(?:$|(?=\\\\s|[\\\\\\\\.,;!?\\\\-/:\\\"')>\\\\]}]))\";\n    this.$rules = {\n        \"start\": [\n            {\n                token: tokens.title,\n                regex: \"(^)([\\\\=\\\\-`:\\\\.'\\\"~\\\\^_\\\\*\\\\+#])(\\\\2{2,}\\\\s*$)\"\n            },\n            {\n                token: [\"text\", tokens.directive, tokens.literal],\n                regex: \"(^\\\\s*\\\\.\\\\. )([^: ]+::)(.*$)\",\n                next: \"codeblock\"\n            },\n            {\n                token: tokens.directive,\n                regex: \"::$\",\n                next: \"codeblock\"\n            },\n            {\n                token: [tokens.entity, tokens.link],\n                regex: \"(^\\\\.\\\\. _[^:]+:)(.*$)\"\n            },\n            {\n                token: [tokens.entity, tokens.link],\n                regex: \"(^__ )(https?://.*$)\"\n            },\n            {\n                token: tokens.entity,\n                regex: \"^\\\\.\\\\. \\\\[[^\\\\]]+\\\\] \"\n            },\n            {\n                token: tokens.comment,\n                regex: \"^\\\\.\\\\. .*$\",\n                next: \"comment\"\n            },\n            {\n                token: tokens.list,\n                regex: \"^\\\\s*[\\\\*\\\\+-] \"\n            },\n            {\n                token: tokens.list,\n                regex: \"^\\\\s*(?:[A-Za-z]|[0-9]+|[ivxlcdmIVXLCDM]+)\\\\. \"\n            },\n            {\n                token: tokens.list,\n                regex: \"^\\\\s*\\\\(?(?:[A-Za-z]|[0-9]+|[ivxlcdmIVXLCDM]+)\\\\) \"\n            },\n            {\n                token: tokens.table,\n                regex: \"^={2,}(?: +={2,})+$\"\n            },\n            {\n                token: tokens.table,\n                regex: \"^\\\\+-{2,}(?:\\\\+-{2,})+\\\\+$\"\n            },\n            {\n                token: tokens.table,\n                regex: \"^\\\\+={2,}(?:\\\\+={2,})+\\\\+$\"\n            },\n            {\n                token: [\"text\", tokens.literal],\n                regex: startStringPrefix + \"(``)(?=\\\\S)\",\n                next: \"code\"\n            },\n            {\n                token: [\"text\", tokens.bold],\n                regex: startStringPrefix + \"(\\\\*\\\\*)(?=\\\\S)\",\n                next: \"bold\"\n            },\n            {\n                token: [\"text\", tokens.italic],\n                regex: startStringPrefix + \"(\\\\*)(?=\\\\S)\",\n                next: \"italic\"\n            },\n            {\n                token: tokens.entity,\n                regex: \"\\\\|[\\\\w\\\\-]+?\\\\|\"\n            },\n            {\n                token: tokens.entity,\n                regex: \":[\\\\w-:]+:`\\\\S\",\n                next: \"entity\"\n            },\n            {\n                token: [\"text\", tokens.entity],\n                regex: startStringPrefix + \"(_`)(?=\\\\S)\",\n                next: \"entity\"\n            },\n            {\n                token: tokens.entity,\n                regex: \"_[A-Za-z0-9\\\\-]+?\"\n            },\n            {\n                token: [\"text\", tokens.link],\n                regex: startStringPrefix + \"(`)(?=\\\\S)\",\n                next: \"link\"\n            },\n            {\n                token: tokens.link,\n                regex: \"[A-Za-z0-9\\\\-]+?__?\"\n            },\n            {\n                token: tokens.link,\n                regex: \"\\\\[[^\\\\]]+?\\\\]_\"\n            },\n            {\n                token: tokens.link,\n                regex: \"https?://\\\\S+\"\n            },\n            {\n                token: tokens.table,\n                regex: \"\\\\|\"\n            }\n        ],\n        \"codeblock\": [\n            {\n                token: tokens.literal,\n                regex: \"^ +.+$\",\n                next: \"codeblock\"\n            },\n            {\n                token: tokens.literal,\n                regex: '^$',\n                next: \"codeblock\"\n            },\n            {\n                token: \"empty\",\n                regex: \"\",\n                next: \"start\"\n            }\n        ],\n        \"code\": [\n            {\n                token: tokens.literal,\n                regex: \"\\\\S``\" + endStringSuffix,\n                next: \"start\"\n            },\n            {\n                defaultToken: tokens.literal\n            }\n        ],\n        \"bold\": [\n            {\n                token: tokens.bold,\n                regex: \"\\\\S\\\\*\\\\*\" + endStringSuffix,\n                next: \"start\"\n            },\n            {\n                defaultToken: tokens.bold\n            }\n        ],\n        \"italic\": [\n            {\n                token: tokens.italic,\n                regex: \"\\\\S\\\\*\" + endStringSuffix,\n                next: \"start\"\n            },\n            {\n                defaultToken: tokens.italic\n            }\n        ],\n        \"entity\": [\n            {\n                token: tokens.entity,\n                regex: \"\\\\S`\" + endStringSuffix,\n                next: \"start\"\n            },\n            {\n                defaultToken: tokens.entity\n            }\n        ],\n        \"link\": [\n            {\n                token: tokens.link,\n                regex: \"\\\\S`__?\" + endStringSuffix,\n                next: \"start\"\n            },\n            {\n                defaultToken: tokens.link\n            }\n        ],\n        \"comment\": [\n            {\n                token: tokens.comment,\n                regex: \"^ +.+$\",\n                next: \"comment\"\n            },\n            {\n                token: tokens.comment,\n                regex: '^$',\n                next: \"comment\"\n            },\n            {\n                token: \"empty\",\n                regex: \"\",\n                next: \"start\"\n            }\n        ]\n    };\n};\noop.inherits(RSTHighlightRules, TextHighlightRules);\nexports.RSTHighlightRules = RSTHighlightRules;\n\n});\n\nace.define(\"ace/mode/rst\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/rst_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar RSTHighlightRules = require(\"./rst_highlight_rules\").RSTHighlightRules;\nvar Mode = function () {\n    this.HighlightRules = RSTHighlightRules;\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.type = \"text\";\n    this.$id = \"ace/mode/rst\";\n    this.snippetFileId = \"ace/snippets/rst\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/rst\"], function(m) {\n                        if ( true && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            \n\n//# sourceURL=webpack://robot-karol-4/./node_modules/ace-builds/src-noconflict/mode-rst.js?");

/***/ })

}]);