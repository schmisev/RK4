/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkrobot_karol_4"] = self["webpackChunkrobot_karol_4"] || []).push([["node_modules_ace-builds_src-noconflict_mode-eiffel_js"],{

/***/ "./node_modules/ace-builds/src-noconflict/mode-eiffel.js":
/*!***************************************************************!*\
  !*** ./node_modules/ace-builds/src-noconflict/mode-eiffel.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nace.define(\"ace/mode/eiffel_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar EiffelHighlightRules = function () {\n    var keywords = \"across|agent|alias|all|attached|as|assign|attribute|check|\" +\n        \"class|convert|create|debug|deferred|detachable|do|else|elseif|end|\" +\n        \"ensure|expanded|export|external|feature|from|frozen|if|inherit|\" +\n        \"inspect|invariant|like|local|loop|not|note|obsolete|old|once|\" +\n        \"Precursor|redefine|rename|require|rescue|retry|select|separate|\" +\n        \"some|then|undefine|until|variant|when\";\n    var operatorKeywords = \"and|implies|or|xor\";\n    var languageConstants = \"Void\";\n    var booleanConstants = \"True|False\";\n    var languageVariables = \"Current|Result\";\n    var keywordMapper = this.createKeywordMapper({\n        \"constant.language\": languageConstants,\n        \"constant.language.boolean\": booleanConstants,\n        \"variable.language\": languageVariables,\n        \"keyword.operator\": operatorKeywords,\n        \"keyword\": keywords\n    }, \"identifier\", true);\n    var simpleString = /(?:[^\"%\\b\\f\\v]|%[A-DFHLNQR-V%'\"()<>]|%\\/(?:0[xX][\\da-fA-F](?:_*[\\da-fA-F])*|0[cC][0-7](?:_*[0-7])*|0[bB][01](?:_*[01])*|\\d(?:_*\\d)*)\\/)+?/;\n    this.$rules = {\n        \"start\": [{\n                token: \"string.quoted.other\", // Aligned-verbatim-strings (verbatim option not supported)\n                regex: /\"\\[/,\n                next: \"aligned_verbatim_string\"\n            }, {\n                token: \"string.quoted.other\", // Non-aligned-verbatim-strings (verbatim option not supported)\n                regex: /\"\\{/,\n                next: \"non-aligned_verbatim_string\"\n            }, {\n                token: \"string.quoted.double\",\n                regex: /\"(?:[^%\\b\\f\\n\\r\\v]|%[A-DFHLNQR-V%'\"()<>]|%\\/(?:0[xX][\\da-fA-F](?:_*[\\da-fA-F])*|0[cC][0-7](?:_*[0-7])*|0[bB][01](?:_*[01])*|\\d(?:_*\\d)*)\\/)*?\"/\n            }, {\n                token: \"comment.line.double-dash\",\n                regex: /--.*/\n            }, {\n                token: \"constant.character\",\n                regex: /'(?:[^%\\b\\f\\n\\r\\t\\v]|%[A-DFHLNQR-V%'\"()<>]|%\\/(?:0[xX][\\da-fA-F](?:_*[\\da-fA-F])*|0[cC][0-7](?:_*[0-7])*|0[bB][01](?:_*[01])*|\\d(?:_*\\d)*)\\/)'/\n            }, {\n                token: \"constant.numeric\", // hexa | octal | bin\n                regex: /\\b0(?:[xX][\\da-fA-F](?:_*[\\da-fA-F])*|[cC][0-7](?:_*[0-7])*|[bB][01](?:_*[01])*)\\b/\n            }, {\n                token: \"constant.numeric\",\n                regex: /(?:\\d(?:_*\\d)*)?\\.(?:(?:\\d(?:_*\\d)*)?[eE][+-]?)?\\d(?:_*\\d)*|\\d(?:_*\\d)*\\.?/\n            }, {\n                token: \"paren.lparen\",\n                regex: /[\\[({]|<<|\\|\\(/\n            }, {\n                token: \"paren.rparen\",\n                regex: /[\\])}]|>>|\\|\\)/\n            }, {\n                token: \"keyword.operator\", // punctuation\n                regex: /:=|->|\\.(?=\\w)|[;,:?]/\n            }, {\n                token: \"keyword.operator\",\n                regex: /\\\\\\\\|\\|\\.\\.\\||\\.\\.|\\/[~\\/]?|[><\\/]=?|[-+*^=~]/\n            }, {\n                token: function (v) {\n                    var result = keywordMapper(v);\n                    if (result === \"identifier\" && v === v.toUpperCase()) {\n                        result = \"entity.name.type\";\n                    }\n                    return result;\n                },\n                regex: /[a-zA-Z][a-zA-Z\\d_]*\\b/\n            }, {\n                token: \"text\",\n                regex: /\\s+/\n            }\n        ],\n        \"aligned_verbatim_string\": [{\n                token: \"string\",\n                regex: /]\"/,\n                next: \"start\"\n            }, {\n                token: \"string\",\n                regex: simpleString\n            }\n        ],\n        \"non-aligned_verbatim_string\": [{\n                token: \"string.quoted.other\",\n                regex: /}\"/,\n                next: \"start\"\n            }, {\n                token: \"string.quoted.other\",\n                regex: simpleString\n            }\n        ]\n    };\n};\noop.inherits(EiffelHighlightRules, TextHighlightRules);\nexports.EiffelHighlightRules = EiffelHighlightRules;\n\n});\n\nace.define(\"ace/mode/eiffel\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/eiffel_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar EiffelHighlightRules = require(\"./eiffel_highlight_rules\").EiffelHighlightRules;\nvar Mode = function () {\n    this.HighlightRules = EiffelHighlightRules;\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.lineCommentStart = \"--\";\n    this.$id = \"ace/mode/eiffel\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/eiffel\"], function(m) {\n                        if ( true && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            \n\n//# sourceURL=webpack://robot-karol-4/./node_modules/ace-builds/src-noconflict/mode-eiffel.js?");

/***/ })

}]);