"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkrobot_karol_4"] = self["webpackChunkrobot_karol_4"] || []).push([["vendors-node_modules_mermaid_dist_chunks_mermaid_core_classDiagram-v2-XJAKCFBM_mjs"],{

/***/ "./node_modules/dagre-d3-es/src/graphlib/json.js":
/*!*******************************************************!*\
  !*** ./node_modules/dagre-d3-es/src/graphlib/json.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   read: () => (/* binding */ read),\n/* harmony export */   write: () => (/* binding */ write)\n/* harmony export */ });\n/* harmony import */ var lodash_es__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash-es */ \"./node_modules/lodash-es/isUndefined.js\");\n/* harmony import */ var lodash_es__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash-es */ \"./node_modules/lodash-es/clone.js\");\n/* harmony import */ var lodash_es__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash-es */ \"./node_modules/lodash-es/map.js\");\n/* harmony import */ var lodash_es__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lodash-es */ \"./node_modules/lodash-es/forEach.js\");\n/* harmony import */ var _graph_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./graph.js */ \"./node_modules/dagre-d3-es/src/graphlib/graph.js\");\n\n\n\n\n\nfunction write(g) {\n  var json = {\n    options: {\n      directed: g.isDirected(),\n      multigraph: g.isMultigraph(),\n      compound: g.isCompound(),\n    },\n    nodes: writeNodes(g),\n    edges: writeEdges(g),\n  };\n  if (!lodash_es__WEBPACK_IMPORTED_MODULE_1__[\"default\"](g.graph())) {\n    json.value = lodash_es__WEBPACK_IMPORTED_MODULE_2__[\"default\"](g.graph());\n  }\n  return json;\n}\n\nfunction writeNodes(g) {\n  return lodash_es__WEBPACK_IMPORTED_MODULE_3__[\"default\"](g.nodes(), function (v) {\n    var nodeValue = g.node(v);\n    var parent = g.parent(v);\n    var node = { v: v };\n    if (!lodash_es__WEBPACK_IMPORTED_MODULE_1__[\"default\"](nodeValue)) {\n      node.value = nodeValue;\n    }\n    if (!lodash_es__WEBPACK_IMPORTED_MODULE_1__[\"default\"](parent)) {\n      node.parent = parent;\n    }\n    return node;\n  });\n}\n\nfunction writeEdges(g) {\n  return lodash_es__WEBPACK_IMPORTED_MODULE_3__[\"default\"](g.edges(), function (e) {\n    var edgeValue = g.edge(e);\n    var edge = { v: e.v, w: e.w };\n    if (!lodash_es__WEBPACK_IMPORTED_MODULE_1__[\"default\"](e.name)) {\n      edge.name = e.name;\n    }\n    if (!lodash_es__WEBPACK_IMPORTED_MODULE_1__[\"default\"](edgeValue)) {\n      edge.value = edgeValue;\n    }\n    return edge;\n  });\n}\n\nfunction read(json) {\n  var g = new _graph_js__WEBPACK_IMPORTED_MODULE_0__.Graph(json.options).setGraph(json.value);\n  lodash_es__WEBPACK_IMPORTED_MODULE_4__[\"default\"](json.nodes, function (entry) {\n    g.setNode(entry.v, entry.value);\n    if (entry.parent) {\n      g.setParent(entry.v, entry.parent);\n    }\n  });\n  lodash_es__WEBPACK_IMPORTED_MODULE_4__[\"default\"](json.edges, function (entry) {\n    g.setEdge({ v: entry.v, w: entry.w, name: entry.name }, entry.value);\n  });\n  return g;\n}\n\n\n//# sourceURL=webpack://robot-karol-4/./node_modules/dagre-d3-es/src/graphlib/json.js?");

/***/ }),

/***/ "./node_modules/mermaid/dist/chunks/mermaid.core/classDiagram-v2-XJAKCFBM.mjs":
/*!************************************************************************************!*\
  !*** ./node_modules/mermaid/dist/chunks/mermaid.core/classDiagram-v2-XJAKCFBM.mjs ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   diagram: () => (/* binding */ diagram)\n/* harmony export */ });\n/* harmony import */ var _chunk_D7TMHCYL_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-D7TMHCYL.mjs */ \"./node_modules/mermaid/dist/chunks/mermaid.core/chunk-D7TMHCYL.mjs\");\n/* harmony import */ var _chunk_BAVOGKFW_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-BAVOGKFW.mjs */ \"./node_modules/mermaid/dist/chunks/mermaid.core/chunk-BAVOGKFW.mjs\");\n/* harmony import */ var _chunk_DGPT5PPI_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-DGPT5PPI.mjs */ \"./node_modules/mermaid/dist/chunks/mermaid.core/chunk-DGPT5PPI.mjs\");\n/* harmony import */ var _chunk_23ATMZXV_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chunk-23ATMZXV.mjs */ \"./node_modules/mermaid/dist/chunks/mermaid.core/chunk-23ATMZXV.mjs\");\n/* harmony import */ var _chunk_RAVNKOQV_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./chunk-RAVNKOQV.mjs */ \"./node_modules/mermaid/dist/chunks/mermaid.core/chunk-RAVNKOQV.mjs\");\n/* harmony import */ var _chunk_2EDTWDYI_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./chunk-2EDTWDYI.mjs */ \"./node_modules/mermaid/dist/chunks/mermaid.core/chunk-2EDTWDYI.mjs\");\n/* harmony import */ var _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./chunk-IIKMQLIC.mjs */ \"./node_modules/mermaid/dist/chunks/mermaid.core/chunk-IIKMQLIC.mjs\");\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! d3 */ \"./node_modules/d3/src/index.js\");\n/* harmony import */ var dagre_d3_es_src_graphlib_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! dagre-d3-es/src/graphlib/index.js */ \"./node_modules/dagre-d3-es/src/graphlib/index.js\");\n/* harmony import */ var dagre_d3_es_src_dagre_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! dagre-d3-es/src/dagre/index.js */ \"./node_modules/dagre-d3-es/src/dagre/index.js\");\n/* harmony import */ var dagre_d3_es_src_graphlib_json_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! dagre-d3-es/src/graphlib/json.js */ \"./node_modules/dagre-d3-es/src/graphlib/json.js\");\n\n\n\n\n\n\n\n\n// src/diagrams/class/classRenderer-v2.ts\n\n\n\n// src/dagre-wrapper/index.js\n\n\n\n// src/dagre-wrapper/mermaid-graphlib.js\n\n\nvar clusterDb = {};\nvar descendants = {};\nvar parents = {};\nvar clear3 = /* @__PURE__ */ (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.__name)(() => {\n  descendants = {};\n  parents = {};\n  clusterDb = {};\n}, \"clear\");\nvar isDescendant = /* @__PURE__ */ (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.__name)((id, ancestorId) => {\n  _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.trace(\"In isDescendant\", ancestorId, \" \", id, \" = \", descendants[ancestorId].includes(id));\n  if (descendants[ancestorId].includes(id)) {\n    return true;\n  }\n  return false;\n}, \"isDescendant\");\nvar edgeInCluster = /* @__PURE__ */ (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.__name)((edge, clusterId) => {\n  _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(\"Descendants of \", clusterId, \" is \", descendants[clusterId]);\n  _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(\"Edge is \", edge);\n  if (edge.v === clusterId) {\n    return false;\n  }\n  if (edge.w === clusterId) {\n    return false;\n  }\n  if (!descendants[clusterId]) {\n    _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.debug(\"Tilt, \", clusterId, \",not in descendants\");\n    return false;\n  }\n  return descendants[clusterId].includes(edge.v) || isDescendant(edge.v, clusterId) || isDescendant(edge.w, clusterId) || descendants[clusterId].includes(edge.w);\n}, \"edgeInCluster\");\nvar copy = /* @__PURE__ */ (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.__name)((clusterId, graph, newGraph, rootId) => {\n  _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.warn(\n    \"Copying children of \",\n    clusterId,\n    \"root\",\n    rootId,\n    \"data\",\n    graph.node(clusterId),\n    rootId\n  );\n  const nodes = graph.children(clusterId) || [];\n  if (clusterId !== rootId) {\n    nodes.push(clusterId);\n  }\n  _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.warn(\"Copying (nodes) clusterId\", clusterId, \"nodes\", nodes);\n  nodes.forEach((node) => {\n    if (graph.children(node).length > 0) {\n      copy(node, graph, newGraph, rootId);\n    } else {\n      const data = graph.node(node);\n      _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(\"cp \", node, \" to \", rootId, \" with parent \", clusterId);\n      newGraph.setNode(node, data);\n      if (rootId !== graph.parent(node)) {\n        _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.warn(\"Setting parent\", node, graph.parent(node));\n        newGraph.setParent(node, graph.parent(node));\n      }\n      if (clusterId !== rootId && node !== clusterId) {\n        _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.debug(\"Setting parent\", node, clusterId);\n        newGraph.setParent(node, clusterId);\n      } else {\n        _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(\"In copy \", clusterId, \"root\", rootId, \"data\", graph.node(clusterId), rootId);\n        _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.debug(\n          \"Not Setting parent for node=\",\n          node,\n          \"cluster!==rootId\",\n          clusterId !== rootId,\n          \"node!==clusterId\",\n          node !== clusterId\n        );\n      }\n      const edges = graph.edges(node);\n      _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.debug(\"Copying Edges\", edges);\n      edges.forEach((edge) => {\n        _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(\"Edge\", edge);\n        const data2 = graph.edge(edge.v, edge.w, edge.name);\n        _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(\"Edge data\", data2, rootId);\n        try {\n          if (edgeInCluster(edge, rootId)) {\n            _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(\"Copying as \", edge.v, edge.w, data2, edge.name);\n            newGraph.setEdge(edge.v, edge.w, data2, edge.name);\n            _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(\"newGraph edges \", newGraph.edges(), newGraph.edge(newGraph.edges()[0]));\n          } else {\n            _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(\n              \"Skipping copy of edge \",\n              edge.v,\n              \"-->\",\n              edge.w,\n              \" rootId: \",\n              rootId,\n              \" clusterId:\",\n              clusterId\n            );\n          }\n        } catch (e) {\n          _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.error(e);\n        }\n      });\n    }\n    _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.debug(\"Removing node\", node);\n    graph.removeNode(node);\n  });\n}, \"copy\");\nvar extractDescendants = /* @__PURE__ */ (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.__name)((id, graph) => {\n  const children = graph.children(id);\n  let res = [...children];\n  for (const child of children) {\n    parents[child] = id;\n    res = [...res, ...extractDescendants(child, graph)];\n  }\n  return res;\n}, \"extractDescendants\");\nvar findNonClusterChild = /* @__PURE__ */ (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.__name)((id, graph) => {\n  _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.trace(\"Searching\", id);\n  const children = graph.children(id);\n  _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.trace(\"Searching children of id \", id, children);\n  if (children.length < 1) {\n    _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.trace(\"This is a valid node\", id);\n    return id;\n  }\n  for (const child of children) {\n    const _id = findNonClusterChild(child, graph);\n    if (_id) {\n      _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.trace(\"Found replacement for\", id, \" => \", _id);\n      return _id;\n    }\n  }\n}, \"findNonClusterChild\");\nvar getAnchorId = /* @__PURE__ */ (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.__name)((id) => {\n  if (!clusterDb[id]) {\n    return id;\n  }\n  if (!clusterDb[id].externalConnections) {\n    return id;\n  }\n  if (clusterDb[id]) {\n    return clusterDb[id].id;\n  }\n  return id;\n}, \"getAnchorId\");\nvar adjustClustersAndEdges = /* @__PURE__ */ (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.__name)((graph, depth) => {\n  if (!graph || depth > 10) {\n    _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.debug(\"Opting out, no graph \");\n    return;\n  } else {\n    _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.debug(\"Opting in, graph \");\n  }\n  graph.nodes().forEach(function(id) {\n    const children = graph.children(id);\n    if (children.length > 0) {\n      _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.warn(\n        \"Cluster identified\",\n        id,\n        \" Replacement id in edges: \",\n        findNonClusterChild(id, graph)\n      );\n      descendants[id] = extractDescendants(id, graph);\n      clusterDb[id] = { id: findNonClusterChild(id, graph), clusterData: graph.node(id) };\n    }\n  });\n  graph.nodes().forEach(function(id) {\n    const children = graph.children(id);\n    const edges = graph.edges();\n    if (children.length > 0) {\n      _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.debug(\"Cluster identified\", id, descendants);\n      edges.forEach((edge) => {\n        if (edge.v !== id && edge.w !== id) {\n          const d1 = isDescendant(edge.v, id);\n          const d2 = isDescendant(edge.w, id);\n          if (d1 ^ d2) {\n            _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.warn(\"Edge: \", edge, \" leaves cluster \", id);\n            _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.warn(\"Descendants of XXX \", id, \": \", descendants[id]);\n            clusterDb[id].externalConnections = true;\n          }\n        }\n      });\n    } else {\n      _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.debug(\"Not a cluster \", id, descendants);\n    }\n  });\n  for (let id of Object.keys(clusterDb)) {\n    const nonClusterChild = clusterDb[id].id;\n    const parent = graph.parent(nonClusterChild);\n    if (parent !== id && clusterDb[parent] && !clusterDb[parent].externalConnections) {\n      clusterDb[id].id = parent;\n    }\n  }\n  graph.edges().forEach(function(e) {\n    const edge = graph.edge(e);\n    _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.warn(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(e));\n    _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.warn(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(graph.edge(e)));\n    let v = e.v;\n    let w = e.w;\n    _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.warn(\n      \"Fix XXX\",\n      clusterDb,\n      \"ids:\",\n      e.v,\n      e.w,\n      \"Translating: \",\n      clusterDb[e.v],\n      \" --- \",\n      clusterDb[e.w]\n    );\n    if (clusterDb[e.v] && clusterDb[e.w] && clusterDb[e.v] === clusterDb[e.w]) {\n      _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.warn(\"Fixing and trixing link to self - removing XXX\", e.v, e.w, e.name);\n      _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.warn(\"Fixing and trixing - removing XXX\", e.v, e.w, e.name);\n      v = getAnchorId(e.v);\n      w = getAnchorId(e.w);\n      graph.removeEdge(e.v, e.w, e.name);\n      const specialId = e.w + \"---\" + e.v;\n      graph.setNode(specialId, {\n        domId: specialId,\n        id: specialId,\n        labelStyle: \"\",\n        labelText: edge.label,\n        padding: 0,\n        shape: \"labelRect\",\n        style: \"\"\n      });\n      const edge1 = structuredClone(edge);\n      const edge2 = structuredClone(edge);\n      edge1.label = \"\";\n      edge1.arrowTypeEnd = \"none\";\n      edge2.label = \"\";\n      edge1.fromCluster = e.v;\n      edge2.toCluster = e.v;\n      graph.setEdge(v, specialId, edge1, e.name + \"-cyclic-special\");\n      graph.setEdge(specialId, w, edge2, e.name + \"-cyclic-special\");\n    } else if (clusterDb[e.v] || clusterDb[e.w]) {\n      _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.warn(\"Fixing and trixing - removing XXX\", e.v, e.w, e.name);\n      v = getAnchorId(e.v);\n      w = getAnchorId(e.w);\n      graph.removeEdge(e.v, e.w, e.name);\n      if (v !== e.v) {\n        const parent = graph.parent(v);\n        clusterDb[parent].externalConnections = true;\n        edge.fromCluster = e.v;\n      }\n      if (w !== e.w) {\n        const parent = graph.parent(w);\n        clusterDb[parent].externalConnections = true;\n        edge.toCluster = e.w;\n      }\n      _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.warn(\"Fix Replacing with XXX\", v, w, e.name);\n      graph.setEdge(v, w, edge, e.name);\n    }\n  });\n  _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.warn(\"Adjusted Graph\", dagre_d3_es_src_graphlib_json_js__WEBPACK_IMPORTED_MODULE_10__.write(graph));\n  extractor(graph, 0);\n  _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.trace(clusterDb);\n}, \"adjustClustersAndEdges\");\nvar extractor = /* @__PURE__ */ (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.__name)((graph, depth) => {\n  _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.warn(\"extractor - \", depth, dagre_d3_es_src_graphlib_json_js__WEBPACK_IMPORTED_MODULE_10__.write(graph), graph.children(\"D\"));\n  if (depth > 10) {\n    _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.error(\"Bailing out\");\n    return;\n  }\n  let nodes = graph.nodes();\n  let hasChildren = false;\n  for (const node of nodes) {\n    const children = graph.children(node);\n    hasChildren = hasChildren || children.length > 0;\n  }\n  if (!hasChildren) {\n    _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.debug(\"Done, no node has children\", graph.nodes());\n    return;\n  }\n  _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.debug(\"Nodes = \", nodes, depth);\n  for (const node of nodes) {\n    _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.debug(\n      \"Extracting node\",\n      node,\n      clusterDb,\n      clusterDb[node] && !clusterDb[node].externalConnections,\n      !graph.parent(node),\n      graph.node(node),\n      graph.children(\"D\"),\n      \" Depth \",\n      depth\n    );\n    if (!clusterDb[node]) {\n      _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.debug(\"Not a cluster\", node, depth);\n    } else if (!clusterDb[node].externalConnections && // !graph.parent(node) &&\n    graph.children(node) && graph.children(node).length > 0) {\n      _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.warn(\n        \"Cluster without external connections, without a parent and with children\",\n        node,\n        depth\n      );\n      const graphSettings = graph.graph();\n      let dir = graphSettings.rankdir === \"TB\" ? \"LR\" : \"TB\";\n      if (clusterDb[node]?.clusterData?.dir) {\n        dir = clusterDb[node].clusterData.dir;\n        _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.warn(\"Fixing dir\", clusterDb[node].clusterData.dir, dir);\n      }\n      const clusterGraph = new dagre_d3_es_src_graphlib_index_js__WEBPACK_IMPORTED_MODULE_8__.Graph({\n        multigraph: true,\n        compound: true\n      }).setGraph({\n        rankdir: dir,\n        // Todo: set proper spacing\n        nodesep: 50,\n        ranksep: 50,\n        marginx: 8,\n        marginy: 8\n      }).setDefaultEdgeLabel(function() {\n        return {};\n      });\n      _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.warn(\"Old graph before copy\", dagre_d3_es_src_graphlib_json_js__WEBPACK_IMPORTED_MODULE_10__.write(graph));\n      copy(node, graph, clusterGraph, node);\n      graph.setNode(node, {\n        clusterNode: true,\n        id: node,\n        clusterData: clusterDb[node].clusterData,\n        labelText: clusterDb[node].labelText,\n        graph: clusterGraph\n      });\n      _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.warn(\"New graph after copy node: (\", node, \")\", dagre_d3_es_src_graphlib_json_js__WEBPACK_IMPORTED_MODULE_10__.write(clusterGraph));\n      _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.debug(\"Old graph after copy\", dagre_d3_es_src_graphlib_json_js__WEBPACK_IMPORTED_MODULE_10__.write(graph));\n    } else {\n      _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.warn(\n        \"Cluster ** \",\n        node,\n        \" **not meeting the criteria !externalConnections:\",\n        !clusterDb[node].externalConnections,\n        \" no parent: \",\n        !graph.parent(node),\n        \" children \",\n        graph.children(node) && graph.children(node).length > 0,\n        graph.children(\"D\"),\n        depth\n      );\n      _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.debug(clusterDb);\n    }\n  }\n  nodes = graph.nodes();\n  _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.warn(\"New list of nodes\", nodes);\n  for (const node of nodes) {\n    const data = graph.node(node);\n    _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.warn(\" Now next level\", node, data);\n    if (data.clusterNode) {\n      extractor(data.graph, depth + 1);\n    }\n  }\n}, \"extractor\");\nvar sorter = /* @__PURE__ */ (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.__name)((graph, nodes) => {\n  if (nodes.length === 0) {\n    return [];\n  }\n  let result = Object.assign(nodes);\n  nodes.forEach((node) => {\n    const children = graph.children(node);\n    const sorted = sorter(graph, children);\n    result = [...result, ...sorted];\n  });\n  return result;\n}, \"sorter\");\nvar sortNodesByHierarchy = /* @__PURE__ */ (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.__name)((graph) => sorter(graph, graph.children()), \"sortNodesByHierarchy\");\n\n// src/dagre-wrapper/clusters.js\n\nvar rect = /* @__PURE__ */ (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.__name)((parent, node) => {\n  _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(\"Creating subgraph rect for \", node.id, node);\n  const siteConfig = (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.getConfig2)();\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", \"cluster\" + (node.class ? \" \" + node.class : \"\")).attr(\"id\", node.id);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const useHtmlLabels = (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.evaluate)(siteConfig.flowchart.htmlLabels);\n  const label = shapeSvg.insert(\"g\").attr(\"class\", \"cluster-label\");\n  const text = node.labelType === \"markdown\" ? (0,_chunk_RAVNKOQV_mjs__WEBPACK_IMPORTED_MODULE_4__.createText)(label, node.labelText, { style: node.labelStyle, useHtmlLabels }, siteConfig) : label.node().appendChild((0,_chunk_DGPT5PPI_mjs__WEBPACK_IMPORTED_MODULE_2__.createLabel_default)(node.labelText, node.labelStyle, void 0, true));\n  let bbox = text.getBBox();\n  if ((0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.evaluate)(siteConfig.flowchart.htmlLabels)) {\n    const div = text.children[0];\n    const dv = (0,d3__WEBPACK_IMPORTED_MODULE_7__.select)(text);\n    bbox = div.getBoundingClientRect();\n    dv.attr(\"width\", bbox.width);\n    dv.attr(\"height\", bbox.height);\n  }\n  const padding = 0 * node.padding;\n  const halfPadding = padding / 2;\n  const width = node.width <= bbox.width + padding ? bbox.width + padding : node.width;\n  if (node.width <= bbox.width + padding) {\n    node.diff = (bbox.width - node.width) / 2 - node.padding / 2;\n  } else {\n    node.diff = -node.padding / 2;\n  }\n  _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.trace(\"Data \", node, JSON.stringify(node));\n  rect2.attr(\"style\", node.style).attr(\"rx\", node.rx).attr(\"ry\", node.ry).attr(\"x\", node.x - width / 2).attr(\"y\", node.y - node.height / 2 - halfPadding).attr(\"width\", width).attr(\"height\", node.height + padding);\n  const { subGraphTitleTopMargin } = (0,_chunk_23ATMZXV_mjs__WEBPACK_IMPORTED_MODULE_3__.getSubGraphTitleMargins)(siteConfig);\n  if (useHtmlLabels) {\n    label.attr(\n      \"transform\",\n      // This puts the label on top of the box instead of inside it\n      `translate(${node.x - bbox.width / 2}, ${node.y - node.height / 2 + subGraphTitleTopMargin})`\n    );\n  } else {\n    label.attr(\n      \"transform\",\n      // This puts the label on top of the box instead of inside it\n      `translate(${node.x}, ${node.y - node.height / 2 + subGraphTitleTopMargin})`\n    );\n  }\n  const rectBox = rect2.node().getBBox();\n  node.width = rectBox.width;\n  node.height = rectBox.height;\n  node.intersect = function(point) {\n    return (0,_chunk_DGPT5PPI_mjs__WEBPACK_IMPORTED_MODULE_2__.intersect_rect_default)(node, point);\n  };\n  return shapeSvg;\n}, \"rect\");\nvar noteGroup = /* @__PURE__ */ (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.__name)((parent, node) => {\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", \"note-cluster\").attr(\"id\", node.id);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const padding = 0 * node.padding;\n  const halfPadding = padding / 2;\n  rect2.attr(\"rx\", node.rx).attr(\"ry\", node.ry).attr(\"x\", node.x - node.width / 2 - halfPadding).attr(\"y\", node.y - node.height / 2 - halfPadding).attr(\"width\", node.width + padding).attr(\"height\", node.height + padding).attr(\"fill\", \"none\");\n  const rectBox = rect2.node().getBBox();\n  node.width = rectBox.width;\n  node.height = rectBox.height;\n  node.intersect = function(point) {\n    return (0,_chunk_DGPT5PPI_mjs__WEBPACK_IMPORTED_MODULE_2__.intersect_rect_default)(node, point);\n  };\n  return shapeSvg;\n}, \"noteGroup\");\nvar roundedWithTitle = /* @__PURE__ */ (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.__name)((parent, node) => {\n  const siteConfig = (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.getConfig2)();\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", node.classes).attr(\"id\", node.id);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const label = shapeSvg.insert(\"g\").attr(\"class\", \"cluster-label\");\n  const innerRect = shapeSvg.append(\"rect\");\n  const text = label.node().appendChild((0,_chunk_DGPT5PPI_mjs__WEBPACK_IMPORTED_MODULE_2__.createLabel_default)(node.labelText, node.labelStyle, void 0, true));\n  let bbox = text.getBBox();\n  if ((0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.evaluate)(siteConfig.flowchart.htmlLabels)) {\n    const div = text.children[0];\n    const dv = (0,d3__WEBPACK_IMPORTED_MODULE_7__.select)(text);\n    bbox = div.getBoundingClientRect();\n    dv.attr(\"width\", bbox.width);\n    dv.attr(\"height\", bbox.height);\n  }\n  bbox = text.getBBox();\n  const padding = 0 * node.padding;\n  const halfPadding = padding / 2;\n  const width = node.width <= bbox.width + node.padding ? bbox.width + node.padding : node.width;\n  if (node.width <= bbox.width + node.padding) {\n    node.diff = (bbox.width + node.padding * 0 - node.width) / 2;\n  } else {\n    node.diff = -node.padding / 2;\n  }\n  rect2.attr(\"class\", \"outer\").attr(\"x\", node.x - width / 2 - halfPadding).attr(\"y\", node.y - node.height / 2 - halfPadding).attr(\"width\", width + padding).attr(\"height\", node.height + padding);\n  innerRect.attr(\"class\", \"inner\").attr(\"x\", node.x - width / 2 - halfPadding).attr(\"y\", node.y - node.height / 2 - halfPadding + bbox.height - 1).attr(\"width\", width + padding).attr(\"height\", node.height + padding - bbox.height - 3);\n  const { subGraphTitleTopMargin } = (0,_chunk_23ATMZXV_mjs__WEBPACK_IMPORTED_MODULE_3__.getSubGraphTitleMargins)(siteConfig);\n  label.attr(\n    \"transform\",\n    `translate(${node.x - bbox.width / 2}, ${node.y - node.height / 2 - node.padding / 3 + ((0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.evaluate)(siteConfig.flowchart.htmlLabels) ? 5 : 3) + subGraphTitleTopMargin})`\n  );\n  const rectBox = rect2.node().getBBox();\n  node.height = rectBox.height;\n  node.intersect = function(point) {\n    return (0,_chunk_DGPT5PPI_mjs__WEBPACK_IMPORTED_MODULE_2__.intersect_rect_default)(node, point);\n  };\n  return shapeSvg;\n}, \"roundedWithTitle\");\nvar divider = /* @__PURE__ */ (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.__name)((parent, node) => {\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", node.classes).attr(\"id\", node.id);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const padding = 0 * node.padding;\n  const halfPadding = padding / 2;\n  rect2.attr(\"class\", \"divider\").attr(\"x\", node.x - node.width / 2 - halfPadding).attr(\"y\", node.y - node.height / 2).attr(\"width\", node.width + padding).attr(\"height\", node.height + padding);\n  const rectBox = rect2.node().getBBox();\n  node.width = rectBox.width;\n  node.height = rectBox.height;\n  node.diff = -node.padding / 2;\n  node.intersect = function(point) {\n    return (0,_chunk_DGPT5PPI_mjs__WEBPACK_IMPORTED_MODULE_2__.intersect_rect_default)(node, point);\n  };\n  return shapeSvg;\n}, \"divider\");\nvar shapes = { rect, roundedWithTitle, noteGroup, divider };\nvar clusterElems = {};\nvar insertCluster = /* @__PURE__ */ (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.__name)((elem, node) => {\n  _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.trace(\"Inserting cluster\");\n  const shape = node.shape || \"rect\";\n  clusterElems[node.id] = shapes[shape](elem, node);\n}, \"insertCluster\");\nvar clear4 = /* @__PURE__ */ (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.__name)(() => {\n  clusterElems = {};\n}, \"clear\");\n\n// src/dagre-wrapper/index.js\nvar recursiveRender = /* @__PURE__ */ (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.__name)(async (_elem, graph, diagramType, id, parentCluster, siteConfig) => {\n  _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(\"Graph in recursive render: XXX\", dagre_d3_es_src_graphlib_json_js__WEBPACK_IMPORTED_MODULE_10__.write(graph), parentCluster);\n  const dir = graph.graph().rankdir;\n  _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.trace(\"Dir in recursive render - dir:\", dir);\n  const elem = _elem.insert(\"g\").attr(\"class\", \"root\");\n  if (!graph.nodes()) {\n    _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(\"No nodes found for\", graph);\n  } else {\n    _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(\"Recursive render XXX\", graph.nodes());\n  }\n  if (graph.edges().length > 0) {\n    _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.trace(\"Recursive edges\", graph.edge(graph.edges()[0]));\n  }\n  const clusters = elem.insert(\"g\").attr(\"class\", \"clusters\");\n  const edgePaths = elem.insert(\"g\").attr(\"class\", \"edgePaths\");\n  const edgeLabels = elem.insert(\"g\").attr(\"class\", \"edgeLabels\");\n  const nodes = elem.insert(\"g\").attr(\"class\", \"nodes\");\n  await Promise.all(\n    graph.nodes().map(async function(v) {\n      const node = graph.node(v);\n      if (parentCluster !== void 0) {\n        const data = JSON.parse(JSON.stringify(parentCluster.clusterData));\n        _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(\"Setting data for cluster XXX (\", v, \") \", data, parentCluster);\n        graph.setNode(parentCluster.id, data);\n        if (!graph.parent(v)) {\n          _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.trace(\"Setting parent\", v, parentCluster.id);\n          graph.setParent(v, parentCluster.id, data);\n        }\n      }\n      _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(\"(Insert) Node XXX\" + v + \": \" + JSON.stringify(graph.node(v)));\n      if (node?.clusterNode) {\n        _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(\"Cluster identified\", v, node.width, graph.node(v));\n        const { ranksep, nodesep } = graph.graph();\n        node.graph.setGraph({\n          ...node.graph.graph(),\n          ranksep,\n          nodesep\n        });\n        const o = await recursiveRender(\n          nodes,\n          node.graph,\n          diagramType,\n          id,\n          graph.node(v),\n          siteConfig\n        );\n        const newEl = o.elem;\n        (0,_chunk_DGPT5PPI_mjs__WEBPACK_IMPORTED_MODULE_2__.updateNodeBounds)(node, newEl);\n        node.diff = o.diff || 0;\n        _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(\"Node bounds (abc123)\", v, node, node.width, node.x, node.y);\n        (0,_chunk_DGPT5PPI_mjs__WEBPACK_IMPORTED_MODULE_2__.setNodeElem)(newEl, node);\n        _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.warn(\"Recursive render complete \", newEl, node);\n      } else {\n        if (graph.children(v).length > 0) {\n          _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(\"Cluster - the non recursive path XXX\", v, node.id, node, graph);\n          _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(findNonClusterChild(node.id, graph));\n          clusterDb[node.id] = { id: findNonClusterChild(node.id, graph), node };\n        } else {\n          _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(\"Node - the non recursive path\", v, node.id, node);\n          await (0,_chunk_DGPT5PPI_mjs__WEBPACK_IMPORTED_MODULE_2__.insertNode)(nodes, graph.node(v), dir);\n        }\n      }\n    })\n  );\n  graph.edges().forEach(async function(e) {\n    const edge = graph.edge(e.v, e.w, e.name);\n    _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(e));\n    _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(\"Edge \" + e.v + \" -> \" + e.w + \": \", e, \" \", JSON.stringify(graph.edge(e)));\n    _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(\"Fix\", clusterDb, \"ids:\", e.v, e.w, \"Translating: \", clusterDb[e.v], clusterDb[e.w]);\n    await (0,_chunk_D7TMHCYL_mjs__WEBPACK_IMPORTED_MODULE_0__.insertEdgeLabel)(edgeLabels, edge);\n  });\n  graph.edges().forEach(function(e) {\n    _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(e));\n  });\n  _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(\"Graph before layout:\", JSON.stringify(dagre_d3_es_src_graphlib_json_js__WEBPACK_IMPORTED_MODULE_10__.write(graph)));\n  _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(\"#############################################\");\n  _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(\"###                Layout                 ###\");\n  _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(\"#############################################\");\n  _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(graph);\n  (0,dagre_d3_es_src_dagre_index_js__WEBPACK_IMPORTED_MODULE_9__.layout)(graph);\n  _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(\"Graph after layout:\", JSON.stringify(dagre_d3_es_src_graphlib_json_js__WEBPACK_IMPORTED_MODULE_10__.write(graph)));\n  let diff = 0;\n  const { subGraphTitleTotalMargin } = (0,_chunk_23ATMZXV_mjs__WEBPACK_IMPORTED_MODULE_3__.getSubGraphTitleMargins)(siteConfig);\n  sortNodesByHierarchy(graph).forEach(function(v) {\n    const node = graph.node(v);\n    _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(\"Position \" + v + \": \" + JSON.stringify(graph.node(v)));\n    _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(\n      \"Position \" + v + \": (\" + node.x,\n      \",\" + node.y,\n      \") width: \",\n      node.width,\n      \" height: \",\n      node.height\n    );\n    if (node?.clusterNode) {\n      node.y += subGraphTitleTotalMargin;\n      (0,_chunk_DGPT5PPI_mjs__WEBPACK_IMPORTED_MODULE_2__.positionNode)(node);\n    } else {\n      if (graph.children(v).length > 0) {\n        node.height += subGraphTitleTotalMargin;\n        insertCluster(clusters, node);\n        clusterDb[node.id].node = node;\n      } else {\n        node.y += subGraphTitleTotalMargin / 2;\n        (0,_chunk_DGPT5PPI_mjs__WEBPACK_IMPORTED_MODULE_2__.positionNode)(node);\n      }\n    }\n  });\n  graph.edges().forEach(function(e) {\n    const edge = graph.edge(e);\n    _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(edge), edge);\n    edge.points.forEach((point) => point.y += subGraphTitleTotalMargin / 2);\n    const paths = (0,_chunk_D7TMHCYL_mjs__WEBPACK_IMPORTED_MODULE_0__.insertEdge)(edgePaths, e, edge, clusterDb, diagramType, graph, id);\n    (0,_chunk_D7TMHCYL_mjs__WEBPACK_IMPORTED_MODULE_0__.positionEdgeLabel)(edge, paths);\n  });\n  graph.nodes().forEach(function(v) {\n    const n = graph.node(v);\n    _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(v, n.type, n.diff);\n    if (n.type === \"group\") {\n      diff = n.diff;\n    }\n  });\n  return { elem, diff };\n}, \"recursiveRender\");\nvar render = /* @__PURE__ */ (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.__name)(async (elem, graph, markers, diagramType, id) => {\n  (0,_chunk_D7TMHCYL_mjs__WEBPACK_IMPORTED_MODULE_0__.markers_default)(elem, markers, diagramType, id);\n  (0,_chunk_DGPT5PPI_mjs__WEBPACK_IMPORTED_MODULE_2__.clear)();\n  (0,_chunk_D7TMHCYL_mjs__WEBPACK_IMPORTED_MODULE_0__.clear)();\n  clear4();\n  clear3();\n  _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.warn(\"Graph at first:\", JSON.stringify(dagre_d3_es_src_graphlib_json_js__WEBPACK_IMPORTED_MODULE_10__.write(graph)));\n  adjustClustersAndEdges(graph);\n  _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.warn(\"Graph after:\", JSON.stringify(dagre_d3_es_src_graphlib_json_js__WEBPACK_IMPORTED_MODULE_10__.write(graph)));\n  const siteConfig = (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.getConfig2)();\n  await recursiveRender(elem, graph, diagramType, id, void 0, siteConfig);\n}, \"render\");\n\n// src/diagrams/class/classRenderer-v2.ts\nvar sanitizeText = /* @__PURE__ */ (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.__name)((txt) => _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.common_default.sanitizeText(txt, (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.getConfig2)()), \"sanitizeText\");\nvar conf = {\n  dividerMargin: 10,\n  padding: 5,\n  textHeight: 10,\n  curve: void 0\n};\nvar addNamespaces = /* @__PURE__ */ (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.__name)(function(namespaces, g, _id, diagObj) {\n  _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(\"keys:\", [...namespaces.keys()]);\n  _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(namespaces);\n  namespaces.forEach(function(vertex) {\n    const shape = \"rect\";\n    const node = {\n      shape,\n      id: vertex.id,\n      domId: vertex.domId,\n      labelText: sanitizeText(vertex.id),\n      labelStyle: \"\",\n      style: \"fill: none; stroke: black\",\n      // TODO V10: Flowchart ? Keeping flowchart for backwards compatibility. Remove in next major release\n      padding: (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.getConfig2)().flowchart?.padding ?? (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.getConfig2)().class?.padding\n    };\n    g.setNode(vertex.id, node);\n    addClasses(vertex.classes, g, _id, diagObj, vertex.id);\n    _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(\"setNode\", node);\n  });\n}, \"addNamespaces\");\nvar addClasses = /* @__PURE__ */ (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.__name)(function(classes, g, _id, diagObj, parent) {\n  _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(\"keys:\", [...classes.keys()]);\n  _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(classes);\n  [...classes.values()].filter((vertex) => vertex.parent === parent).forEach(function(vertex) {\n    const cssClassStr = vertex.cssClasses.join(\" \");\n    const styles = (0,_chunk_2EDTWDYI_mjs__WEBPACK_IMPORTED_MODULE_5__.getStylesFromArray)(vertex.styles);\n    const vertexText = vertex.label ?? vertex.id;\n    const radius = 0;\n    const shape = \"class_box\";\n    const node = {\n      labelStyle: styles.labelStyle,\n      shape,\n      labelText: sanitizeText(vertexText),\n      classData: vertex,\n      rx: radius,\n      ry: radius,\n      class: cssClassStr,\n      style: styles.style,\n      id: vertex.id,\n      domId: vertex.domId,\n      tooltip: diagObj.db.getTooltip(vertex.id, parent) || \"\",\n      haveCallback: vertex.haveCallback,\n      link: vertex.link,\n      width: vertex.type === \"group\" ? 500 : void 0,\n      type: vertex.type,\n      // TODO V10: Flowchart ? Keeping flowchart for backwards compatibility. Remove in next major release\n      padding: (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.getConfig2)().flowchart?.padding ?? (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.getConfig2)().class?.padding\n    };\n    g.setNode(vertex.id, node);\n    if (parent) {\n      g.setParent(vertex.id, parent);\n    }\n    _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(\"setNode\", node);\n  });\n}, \"addClasses\");\nvar addNotes = /* @__PURE__ */ (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.__name)(function(notes, g, startEdgeId, classes) {\n  _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(notes);\n  notes.forEach(function(note, i) {\n    const vertex = note;\n    const cssNoteStr = \"\";\n    const styles = { labelStyle: \"\", style: \"\" };\n    const vertexText = vertex.text;\n    const radius = 0;\n    const shape = \"note\";\n    const node = {\n      labelStyle: styles.labelStyle,\n      shape,\n      labelText: sanitizeText(vertexText),\n      noteData: vertex,\n      rx: radius,\n      ry: radius,\n      class: cssNoteStr,\n      style: styles.style,\n      id: vertex.id,\n      domId: vertex.id,\n      tooltip: \"\",\n      type: \"note\",\n      // TODO V10: Flowchart ? Keeping flowchart for backwards compatibility. Remove in next major release\n      padding: (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.getConfig2)().flowchart?.padding ?? (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.getConfig2)().class?.padding\n    };\n    g.setNode(vertex.id, node);\n    _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(\"setNode\", node);\n    if (!vertex.class || !classes.has(vertex.class)) {\n      return;\n    }\n    const edgeId = startEdgeId + i;\n    const edgeData = {\n      id: `edgeNote${edgeId}`,\n      //Set relationship style and line type\n      classes: \"relation\",\n      pattern: \"dotted\",\n      // Set link type for rendering\n      arrowhead: \"none\",\n      //Set edge extra labels\n      startLabelRight: \"\",\n      endLabelLeft: \"\",\n      //Set relation arrow types\n      arrowTypeStart: \"none\",\n      arrowTypeEnd: \"none\",\n      style: \"fill:none\",\n      labelStyle: \"\",\n      curve: (0,_chunk_2EDTWDYI_mjs__WEBPACK_IMPORTED_MODULE_5__.interpolateToCurve)(conf.curve, d3__WEBPACK_IMPORTED_MODULE_7__.curveLinear)\n    };\n    g.setEdge(vertex.id, vertex.class, edgeData, edgeId);\n  });\n}, \"addNotes\");\nvar addRelations = /* @__PURE__ */ (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.__name)(function(relations, g) {\n  const conf2 = (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.getConfig2)().flowchart;\n  let cnt = 0;\n  relations.forEach(function(edge) {\n    cnt++;\n    const edgeData = {\n      //Set relationship style and line type\n      classes: \"relation\",\n      pattern: edge.relation.lineType == 1 ? \"dashed\" : \"solid\",\n      id: (0,_chunk_2EDTWDYI_mjs__WEBPACK_IMPORTED_MODULE_5__.getEdgeId)(edge.id1, edge.id2, {\n        prefix: \"id\",\n        counter: cnt\n      }),\n      // Set link type for rendering\n      arrowhead: edge.type === \"arrow_open\" ? \"none\" : \"normal\",\n      //Set edge extra labels\n      startLabelRight: edge.relationTitle1 === \"none\" ? \"\" : edge.relationTitle1,\n      endLabelLeft: edge.relationTitle2 === \"none\" ? \"\" : edge.relationTitle2,\n      //Set relation arrow types\n      arrowTypeStart: getArrowMarker(edge.relation.type1),\n      arrowTypeEnd: getArrowMarker(edge.relation.type2),\n      style: \"fill:none\",\n      labelStyle: \"\",\n      curve: (0,_chunk_2EDTWDYI_mjs__WEBPACK_IMPORTED_MODULE_5__.interpolateToCurve)(conf2?.curve, d3__WEBPACK_IMPORTED_MODULE_7__.curveLinear)\n    };\n    _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(edgeData, edge);\n    if (edge.style !== void 0) {\n      const styles = (0,_chunk_2EDTWDYI_mjs__WEBPACK_IMPORTED_MODULE_5__.getStylesFromArray)(edge.style);\n      edgeData.style = styles.style;\n      edgeData.labelStyle = styles.labelStyle;\n    }\n    edge.text = edge.title;\n    if (edge.text === void 0) {\n      if (edge.style !== void 0) {\n        edgeData.arrowheadStyle = \"fill: #333\";\n      }\n    } else {\n      edgeData.arrowheadStyle = \"fill: #333\";\n      edgeData.labelpos = \"c\";\n      if ((0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.getConfig2)().flowchart?.htmlLabels ?? (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.getConfig2)().htmlLabels) {\n        edgeData.labelType = \"html\";\n        edgeData.label = '<span class=\"edgeLabel\">' + edge.text + \"</span>\";\n      } else {\n        edgeData.labelType = \"text\";\n        edgeData.label = edge.text.replace(_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.common_default.lineBreakRegex, \"\\n\");\n        if (edge.style === void 0) {\n          edgeData.style = edgeData.style || \"stroke: #333; stroke-width: 1.5px;fill:none\";\n        }\n        edgeData.labelStyle = edgeData.labelStyle.replace(\"color:\", \"fill:\");\n      }\n    }\n    g.setEdge(edge.id1, edge.id2, edgeData, cnt);\n  });\n}, \"addRelations\");\nvar setConf = /* @__PURE__ */ (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.__name)(function(cnf) {\n  conf = {\n    ...conf,\n    ...cnf\n  };\n}, \"setConf\");\nvar draw = /* @__PURE__ */ (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.__name)(async function(text, id, _version, diagObj) {\n  _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(\"Drawing class - \", id);\n  const conf2 = (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.getConfig2)().flowchart ?? (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.getConfig2)().class;\n  const securityLevel = (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.getConfig2)().securityLevel;\n  _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(\"config:\", conf2);\n  const nodeSpacing = conf2?.nodeSpacing ?? 50;\n  const rankSpacing = conf2?.rankSpacing ?? 50;\n  const g = new dagre_d3_es_src_graphlib_index_js__WEBPACK_IMPORTED_MODULE_8__.Graph({\n    multigraph: true,\n    compound: true\n  }).setGraph({\n    rankdir: diagObj.db.getDirection(),\n    nodesep: nodeSpacing,\n    ranksep: rankSpacing,\n    marginx: 8,\n    marginy: 8\n  }).setDefaultEdgeLabel(function() {\n    return {};\n  });\n  const namespaces = diagObj.db.getNamespaces();\n  const classes = diagObj.db.getClasses();\n  const relations = diagObj.db.getRelations();\n  const notes = diagObj.db.getNotes();\n  _chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.log.info(relations);\n  addNamespaces(namespaces, g, id, diagObj);\n  addClasses(classes, g, id, diagObj);\n  addRelations(relations, g);\n  addNotes(notes, g, relations.length + 1, classes);\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = (0,d3__WEBPACK_IMPORTED_MODULE_7__.select)(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? (0,d3__WEBPACK_IMPORTED_MODULE_7__.select)(sandboxElement.nodes()[0].contentDocument.body) : (0,d3__WEBPACK_IMPORTED_MODULE_7__.select)(\"body\");\n  const svg = root.select(`[id=\"${id}\"]`);\n  const element = root.select(\"#\" + id + \" g\");\n  await render(\n    element,\n    g,\n    [\"aggregation\", \"extension\", \"composition\", \"dependency\", \"lollipop\"],\n    \"classDiagram\",\n    id\n  );\n  _chunk_2EDTWDYI_mjs__WEBPACK_IMPORTED_MODULE_5__.utils_default.insertTitle(svg, \"classTitleText\", conf2?.titleTopMargin ?? 5, diagObj.db.getDiagramTitle());\n  (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.setupGraphViewbox)(g, svg, conf2?.diagramPadding, conf2?.useMaxWidth);\n  if (!conf2?.htmlLabels) {\n    const doc = securityLevel === \"sandbox\" ? sandboxElement.nodes()[0].contentDocument : document;\n    const labels = doc.querySelectorAll('[id=\"' + id + '\"] .edgeLabel .label');\n    for (const label of labels) {\n      const dim = label.getBBox();\n      const rect2 = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n      rect2.setAttribute(\"rx\", 0);\n      rect2.setAttribute(\"ry\", 0);\n      rect2.setAttribute(\"width\", dim.width);\n      rect2.setAttribute(\"height\", dim.height);\n      label.insertBefore(rect2, label.firstChild);\n    }\n  }\n}, \"draw\");\nfunction getArrowMarker(type) {\n  let marker;\n  switch (type) {\n    case 0:\n      marker = \"aggregation\";\n      break;\n    case 1:\n      marker = \"extension\";\n      break;\n    case 2:\n      marker = \"composition\";\n      break;\n    case 3:\n      marker = \"dependency\";\n      break;\n    case 4:\n      marker = \"lollipop\";\n      break;\n    default:\n      marker = \"none\";\n  }\n  return marker;\n}\n(0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.__name)(getArrowMarker, \"getArrowMarker\");\nvar classRenderer_v2_default = {\n  setConf,\n  draw\n};\n\n// src/diagrams/class/classDiagram-v2.ts\nvar diagram = {\n  parser: _chunk_BAVOGKFW_mjs__WEBPACK_IMPORTED_MODULE_1__.classDiagram_default,\n  db: _chunk_BAVOGKFW_mjs__WEBPACK_IMPORTED_MODULE_1__.classDb_default,\n  renderer: classRenderer_v2_default,\n  styles: _chunk_BAVOGKFW_mjs__WEBPACK_IMPORTED_MODULE_1__.styles_default,\n  init: /* @__PURE__ */ (0,_chunk_IIKMQLIC_mjs__WEBPACK_IMPORTED_MODULE_6__.__name)((cnf) => {\n    if (!cnf.class) {\n      cnf.class = {};\n    }\n    cnf.class.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n    _chunk_BAVOGKFW_mjs__WEBPACK_IMPORTED_MODULE_1__.classDb_default.clear();\n  }, \"init\")\n};\n\n\n\n//# sourceURL=webpack://robot-karol-4/./node_modules/mermaid/dist/chunks/mermaid.core/classDiagram-v2-XJAKCFBM.mjs?");

/***/ })

}]);