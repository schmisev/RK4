/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkrobot_karol_4"] = self["webpackChunkrobot_karol_4"] || []).push([["node_modules_ace-builds_src-noconflict_ext-simple_tokenizer_js"],{

/***/ "./node_modules/ace-builds/src-noconflict/ext-simple_tokenizer.js":
/*!************************************************************************!*\
  !*** ./node_modules/ace-builds/src-noconflict/ext-simple_tokenizer.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nace.define(\"ace/ext/simple_tokenizer\",[\"require\",\"exports\",\"module\",\"ace/tokenizer\",\"ace/layer/text_util\"], function(require, exports, module){\"use strict\";\nvar Tokenizer = require(\"../tokenizer\").Tokenizer;\nvar isTextToken = require(\"../layer/text_util\").isTextToken;\nvar SimpleTokenizer = /** @class */ (function () {\n    function SimpleTokenizer(content, tokenizer) {\n        this._lines = content.split(/\\r\\n|\\r|\\n/);\n        this._states = [];\n        this._tokenizer = tokenizer;\n    }\n    SimpleTokenizer.prototype.getTokens = function (row) {\n        var line = this._lines[row];\n        var previousState = this._states[row - 1];\n        var data = this._tokenizer.getLineTokens(line, previousState);\n        this._states[row] = data.state;\n        return data.tokens;\n    };\n    SimpleTokenizer.prototype.getLength = function () {\n        return this._lines.length;\n    };\n    return SimpleTokenizer;\n}());\nfunction tokenize(content, highlightRules) {\n    var tokenizer = new SimpleTokenizer(content, new Tokenizer(highlightRules.getRules()));\n    var result = [];\n    for (var lineIndex = 0; lineIndex < tokenizer.getLength(); lineIndex++) {\n        var lineTokens = tokenizer.getTokens(lineIndex);\n        result.push(lineTokens.map(function (token) { return ({\n            className: isTextToken(token.type) ? undefined : \"ace_\" + token.type.replace(/\\./g, \" ace_\"),\n            value: token.value\n        }); }));\n    }\n    return result;\n}\nmodule.exports = {\n    tokenize: tokenize\n};\n\n});                (function() {\n                    ace.require([\"ace/ext/simple_tokenizer\"], function(m) {\n                        if ( true && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            \n\n//# sourceURL=webpack://robot-karol-4/./node_modules/ace-builds/src-noconflict/ext-simple_tokenizer.js?");

/***/ })

}]);