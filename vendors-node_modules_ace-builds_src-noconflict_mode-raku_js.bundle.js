/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkrobot_karol_4"] = self["webpackChunkrobot_karol_4"] || []).push([["vendors-node_modules_ace-builds_src-noconflict_mode-raku_js"],{

/***/ "./node_modules/ace-builds/src-noconflict/mode-raku.js":
/*!*************************************************************!*\
  !*** ./node_modules/ace-builds/src-noconflict/mode-raku.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nace.define(\"ace/mode/raku_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar RakuHighlightRules = function () {\n    var keywords = (\"my|our|class|role|grammar|is|does|sub|method|submethod|try|\" +\n        \"default|when|if|elsif|else|unless|with|orwith|without|for|given|proceed|\" +\n        \"succeed|loop|while|until|repeat|module|use|need|import|require|unit|\" +\n        \"constant|enum|multi|return|has|token|rule|make|made|proto|state|augment|\" +\n        \"but|anon|supersede|let|subset|gather|returns|return-rw|temp|\" +\n        \"BEGIN|CHECK|INIT|END|CLOSE|ENTER|LEAVE|KEEP|UNDO|PRE|POST|FIRST|NEXT|LAST|CATCH|CONTROL|QUIT|DOC\");\n    var types = (\"Any|Array|Associative|AST|atomicint|Attribute|Backtrace|Backtrace::Frame|\" +\n        \"Bag|Baggy|BagHash|Blob|Block|Bool|Buf|Callable|CallFrame|Cancellation|\" +\n        \"Capture|Channel|Code|compiler|Complex|ComplexStr|Cool|CurrentThreadScheduler|\" +\n        \"Cursor|Date|Dateish|DateTime|Distro|Duration|Encoding|Exception|Failure|\" +\n        \"FatRat|Grammar|Hash|HyperWhatever|Instant|Int|IntStr|IO|IO::ArgFiles|\" +\n        \"IO::CatHandle|IO::Handle|IO::Notification|IO::Path|IO::Path::Cygwin|\" +\n        \"IO::Path::QNX|IO::Path::Unix|IO::Path::Win32|IO::Pipe|IO::Socket|\" +\n        \"IO::Socket::Async|IO::Socket::INET|IO::Spec|IO::Spec::Cygwin|IO::Spec::QNX|\" +\n        \"IO::Spec::Unix|IO::Spec::Win32|IO::Special|Iterable|Iterator|Junction|Kernel|\" +\n        \"Label|List|Lock|Lock::Async|Macro|Map|Match|Metamodel::AttributeContainer|\" +\n        \"Metamodel::C3MRO|Metamodel::ClassHOW|Metamodel::EnumHOW|Metamodel::Finalization|\" +\n        \"Metamodel::MethodContainer|Metamodel::MROBasedMethodDispatch|Metamodel::MultipleInheritance|\" +\n        \"Metamodel::Naming|Metamodel::Primitives|Metamodel::PrivateMethodContainer|\" +\n        \"Metamodel::RoleContainer|Metamodel::Trusting|Method|Mix|MixHash|Mixy|Mu|\" +\n        \"NFC|NFD|NFKC|NFKD|Nil|Num|Numeric|NumStr|ObjAt|Order|Pair|Parameter|Perl|\" +\n        \"Pod::Block|Pod::Block::Code|Pod::Block::Comment|Pod::Block::Declarator|\" +\n        \"Pod::Block::Named|Pod::Block::Para|Pod::Block::Table|Pod::Heading|Pod::Item|\" +\n        \"Positional|PositionalBindFailover|Proc|Proc::Async|Promise|Proxy|PseudoStash|\" +\n        \"Raku|QuantHash|Range|Rat|Rational|RatStr|Real|Regex|Routine|Scalar|Scheduler|\" +\n        \"Semaphore|Seq|Set|SetHash|Setty|Signature|Slip|Stash|Str|StrDistance|Stringy|\" +\n        \"Sub|Submethod|Supplier|Supplier::Preserving|Supply|Systemic|Tap|Telemetry|\" +\n        \"Telemetry::Instrument::Thread|Telemetry::Instrument::Usage|Telemetry::Period|\" +\n        \"Telemetry::Sampler|Thread|ThreadPoolScheduler|UInt|Uni|utf8|Variable|Version|\" +\n        \"VM|Whatever|WhateverCode|WrapHandle|int|uint|num|str|\" +\n        \"int8|int16|int32|int64|uint8|uint16|uint32|uint64|long|longlong|num32|num64|size_t|bool|CArray|Pointer|\" +\n        \"Backtrace|Backtrace::Frame|Exception|Failure|X::AdHoc|X::Anon::Augment|X::Anon::Multi|\" +\n        \"X::Assignment::RO|X::Attribute::NoPackage|X::Attribute::Package|X::Attribute::Undeclared|\" +\n        \"X::Augment::NoSuchType|X::Bind|X::Bind::NativeType|X::Bind::Slice|X::Caller::NotDynamic|\" +\n        \"X::Channel::ReceiveOnClosed|X::Channel::SendOnClosed|X::Comp|X::Composition::NotComposable|\" +\n        \"X::Constructor::Positional|X::ControlFlow|X::ControlFlow::Return|X::DateTime::TimezoneClash|\" +\n        \"X::Declaration::Scope|X::Declaration::Scope::Multi|X::Does::TypeObject|X::Eval::NoSuchLang|\" +\n        \"X::Export::NameClash|X::IO|X::IO::Chdir|X::IO::Chmod|X::IO::Copy|X::IO::Cwd|X::IO::Dir|\" +\n        \"X::IO::DoesNotExist|X::IO::Link|X::IO::Mkdir|X::IO::Move|X::IO::Rename|X::IO::Rmdir|X::IO::Symlink|\" +\n        \"X::IO::Unlink|X::Inheritance::NotComposed|X::Inheritance::Unsupported|X::Method::InvalidQualifier|\" +\n        \"X::Method::NotFound|X::Method::Private::Permission|X::Method::Private::Unqualified|\" +\n        \"X::Mixin::NotComposable|X::NYI|X::NoDispatcher|X::Numeric::Real|X::OS|X::Obsolete|X::OutOfRange|\" +\n        \"X::Package::Stubbed|X::Parameter::Default|X::Parameter::MultipleTypeConstraints|\" +\n        \"X::Parameter::Placeholder|X::Parameter::Twigil|X::Parameter::WrongOrder|X::Phaser::Multiple|\" +\n        \"X::Phaser::PrePost|X::Placeholder::Block|X::Placeholder::Mainline|X::Pod|X::Proc::Async|\" +\n        \"X::Proc::Async::AlreadyStarted|X::Proc::Async::CharsOrBytes|X::Proc::Async::MustBeStarted|\" +\n        \"X::Proc::Async::OpenForWriting|X::Proc::Async::TapBeforeSpawn|X::Proc::Unsuccessful|\" +\n        \"X::Promise::CauseOnlyValidOnBroken|X::Promise::Vowed|X::Redeclaration|X::Role::Initialization|\" +\n        \"X::Seq::Consumed|X::Sequence::Deduction|X::Signature::NameClash|X::Signature::Placeholder|\" +\n        \"X::Str::Numeric|X::StubCode|X::Syntax|X::Syntax::Augment::WithoutMonkeyTyping|\" +\n        \"X::Syntax::Comment::Embedded|X::Syntax::Confused|X::Syntax::InfixInTermPosition|\" +\n        \"X::Syntax::Malformed|X::Syntax::Missing|X::Syntax::NegatedPair|X::Syntax::NoSelf|\" +\n        \"X::Syntax::Number::RadixOutOfRange|X::Syntax::P5|X::Syntax::Regex::Adverb|\" +\n        \"X::Syntax::Regex::SolitaryQuantifier|X::Syntax::Reserved|X::Syntax::Self::WithoutObject|\" +\n        \"X::Syntax::Signature::InvocantMarker|X::Syntax::Term::MissingInitializer|X::Syntax::UnlessElse|\" +\n        \"X::Syntax::Variable::Match|X::Syntax::Variable::Numeric|X::Syntax::Variable::Twigil|X::Temporal|\" +\n        \"X::Temporal::InvalidFormat|X::TypeCheck|X::TypeCheck::Assignment|X::TypeCheck::Binding|\" +\n        \"X::TypeCheck::Return|X::TypeCheck::Splice|X::Undeclared\");\n    var builtinFunctions = (\"abs|abs2rel|absolute|accept|ACCEPTS|accessed|acos|acosec|acosech|acosh|\" +\n        \"acotan|acotanh|acquire|act|action|actions|add|add_attribute|add_enum_value|\" +\n        \"add_fallback|add_method|add_parent|add_private_method|add_role|add_trustee|\" +\n        \"adverb|after|all|allocate|allof|allowed|alternative-names|annotations|antipair|\" +\n        \"antipairs|any|anyof|app_lifetime|append|arch|archname|args|arity|asec|asech|\" +\n        \"asin|asinh|ASSIGN-KEY|ASSIGN-POS|assuming|ast|at|atan|atan2|atanh|AT-KEY|\" +\n        \"atomic-assign|atomic-dec-fetch|atomic-fetch|atomic-fetch-add|atomic-fetch-dec|\" +\n        \"atomic-fetch-inc|atomic-fetch-sub|atomic-inc-fetch|AT-POS|attributes|auth|await|\" +\n        \"backtrace|Bag|BagHash|base|basename|base-repeating|batch|BIND-KEY|BIND-POS|\" +\n        \"bind-stderr|bind-stdin|bind-stdout|bind-udp|bits|bless|block|bool-only|\" +\n        \"bounds|break|Bridge|broken|BUILD|build-date|bytes|cache|callframe|calling-package|\" +\n        \"CALL-ME|callsame|callwith|can|cancel|candidates|cando|canonpath|caps|caption|\" +\n        \"Capture|cas|catdir|categorize|categorize-list|catfile|catpath|cause|ceiling|\" +\n        \"cglobal|changed|Channel|chars|chdir|child|child-name|child-typename|chmod|chomp|\" +\n        \"chop|chr|chrs|chunks|cis|classify|classify-list|cleanup|clone|close|closed|\" +\n        \"close-stdin|code|codes|collate|column|comb|combinations|command|comment|\" +\n        \"compiler|Complex|compose|compose_type|composer|condition|config|configure_destroy|\" +\n        \"configure_type_checking|conj|connect|constraints|construct|contains|contents|copy|\" +\n        \"cos|cosec|cosech|cosh|cotan|cotanh|count|count-only|cpu-cores|cpu-usage|CREATE|\" +\n        \"create_type|cross|cue|curdir|curupdir|d|Date|DateTime|day|daycount|day-of-month|\" +\n        \"day-of-week|day-of-year|days-in-month|declaration|decode|decoder|deepmap|\" +\n        \"defined|DEFINITE|delayed|DELETE-KEY|DELETE-POS|denominator|desc|DESTROY|destroyers|\" +\n        \"devnull|did-you-mean|die|dir|dirname|dir-sep|DISTROnames|do|done|duckmap|dynamic|\" +\n        \"e|eager|earlier|elems|emit|enclosing|encode|encoder|encoding|end|ends-with|enum_from_value|\" +\n        \"enum_value_list|enum_values|enums|eof|EVAL|EVALFILE|exception|excludes-max|excludes-min|\" +\n        \"EXISTS-KEY|EXISTS-POS|exit|exitcode|exp|expected|explicitly-manage|expmod|extension|f|\" +\n        \"fail|fc|feature|file|filename|find_method|find_method_qualified|finish|first|flat|flatmap|\" +\n        \"flip|floor|flush|fmt|format|formatter|freeze|from|from-list|from-loop|from-posix|full|\" +\n        \"full-barrier|get|get_value|getc|gist|got|grab|grabpairs|grep|handle|handled|handles|\" +\n        \"hardware|has_accessor|head|headers|hh-mm-ss|hidden|hides|hour|how|hyper|id|illegal|\" +\n        \"im|in|indent|index|indices|indir|infinite|infix|install_method_cache|\" +\n        \"Instant|instead|int-bounds|interval|in-timezone|invalid-str|invert|invocant|IO|\" +\n        \"IO::Notification.watch-path|is_trusted|is_type|isa|is-absolute|is-hidden|is-initial-thread|\" +\n        \"is-int|is-lazy|is-leap-year|isNaN|is-prime|is-relative|is-routine|is-setting|is-win|item|\" +\n        \"iterator|join|keep|kept|KERNELnames|key|keyof|keys|kill|kv|kxxv|l|lang|last|lastcall|later|\" +\n        \"lazy|lc|leading|level|line|lines|link|listen|live|local|lock|log|log10|lookup|lsb|\" +\n        \"MAIN|match|max|maxpairs|merge|message|method_table|methods|migrate|min|minmax|\" +\n        \"minpairs|minute|misplaced|Mix|MixHash|mkdir|mode|modified|month|move|mro|msb|multiness|\" +\n        \"name|named|named_names|narrow|nativecast|native-descriptor|nativesizeof|new|new_type|\" +\n        \"new-from-daycount|new-from-pairs|next|nextcallee|next-handle|nextsame|nextwith|NFC|NFD|\" +\n        \"NFKC|NFKD|nl-in|nl-out|nodemap|none|norm|not|note|now|nude|numerator|Numeric|of|\" +\n        \"offset|offset-in-hours|offset-in-minutes|old|on-close|one|on-switch|open|opened|\" +\n        \"operation|optional|ord|ords|orig|os-error|osname|out-buffer|pack|package|package-kind|\" +\n        \"package-name|packages|pair|pairs|pairup|parameter|params|parent|parent-name|parents|parse|\" +\n        \"parse-base|parsefile|parse-names|parts|path|path-sep|payload|peer-host|peer-port|periods|\" +\n        \"perl|permutations|phaser|pick|pickpairs|pid|placeholder|plus|polar|poll|polymod|pop|pos|\" +\n        \"positional|posix|postfix|postmatch|precomp-ext|precomp-target|pred|prefix|prematch|prepend|\" +\n        \"print|printf|print-nl|print-to|private|private_method_table|proc|produce|Promise|prompt|\" +\n        \"protect|pull-one|push|push-all|push-at-least|push-exactly|push-until-lazy|put|\" +\n        \"qualifier-type|quit|r|race|radix|raku|rand|range|raw|re|read|readchars|readonly|\" +\n        \"ready|Real|reallocate|reals|reason|rebless|receive|recv|redispatcher|redo|reduce|\" +\n        \"rel2abs|relative|release|rename|repeated|replacement|report|reserved|resolve|\" +\n        \"restore|result|resume|rethrow|reverse|right|rindex|rmdir|roles_to_compose|\" +\n        \"rolish|roll|rootdir|roots|rotate|rotor|round|roundrobin|routine-type|run|rwx|s|\" +\n        \"samecase|samemark|samewith|say|schedule-on|scheduler|scope|sec|sech|second|seek|\" +\n        \"self|send|Set|set_hidden|set_name|set_package|set_rw|set_value|SetHash|\" +\n        \"set-instruments|setup_finalization|shape|share|shell|shift|sibling|sigil|\" +\n        \"sign|signal|signals|signature|sin|sinh|sink|sink-all|skip|skip-at-least|\" +\n        \"skip-at-least-pull-one|skip-one|sleep|sleep-timer|sleep-until|Slip|slurp|\" +\n        \"slurp-rest|slurpy|snap|snapper|so|socket-host|socket-port|sort|source|\" +\n        \"source-package|spawn|SPEC|splice|split|splitdir|splitpath|sprintf|spurt|\" +\n        \"sqrt|squish|srand|stable|start|started|starts-with|status|stderr|stdout|\" +\n        \"sub_signature|subbuf|subbuf-rw|subname|subparse|subst|subst-mutate|\" +\n        \"substr|substr-eq|substr-rw|succ|sum|Supply|symlink|t|tail|take|take-rw|\" +\n        \"tan|tanh|tap|target|target-name|tc|tclc|tell|then|throttle|throw|timezone|\" +\n        \"tmpdir|to|today|toggle|to-posix|total|trailing|trans|tree|trim|trim-leading|\" +\n        \"trim-trailing|truncate|truncated-to|trusts|try_acquire|trying|twigil|type|\" +\n        \"type_captures|typename|uc|udp|uncaught_handler|unimatch|uniname|uninames|\" +\n        \"uniparse|uniprop|uniprops|unique|unival|univals|unlink|unlock|unpack|unpolar|\" +\n        \"unshift|unwrap|updir|USAGE|utc|val|value|values|VAR|variable|verbose-config|\" +\n        \"version|VMnames|volume|vow|w|wait|warn|watch|watch-path|week|weekday-of-month|\" +\n        \"week-number|week-year|WHAT|WHERE|WHEREFORE|WHICH|WHO|whole-second|WHY|\" +\n        \"wordcase|words|workaround|wrap|write|write-to|yada|year|yield|yyyy-mm-dd|\" +\n        \"z|zip|zip-latest|\" +\n        \"plan|done-testing|bail-out|todo|skip|skip-rest|diag|subtest|pass|flunk|ok|\" +\n        \"nok|cmp-ok|is-deeply|isnt|is-approx|like|unlike|use-ok|isa-ok|does-ok|\" +\n        \"can-ok|dies-ok|lives-ok|eval-dies-ok|eval-lives-ok|throws-like|fails-like|\" +\n        \"rw|required|native|repr|export|symbol\");\n    var constants_ascii = (\"pi|Inf|tau|time\");\n    var ops_txt = (\"eq|ne|gt|lt|le|ge|div|gcd|lcm|leg|cmp|ff|fff|\" +\n        \"x|before|after|Z|X|and|or|andthen|notandthen|orelse|xor\");\n    var keywordMapper = this.createKeywordMapper({\n        \"keyword\": keywords,\n        \"storage.type\": types,\n        \"constant.language\": constants_ascii,\n        \"support.function\": builtinFunctions,\n        \"keyword.operator\": ops_txt\n    }, \"identifier\");\n    var moduleName = \"[a-zA-Z_][a-zA-Z_0-9:-]*\\\\b\";\n    var hex = { token: \"constant.numeric\", regex: \"0x[0-9a-fA-F]+\\\\b\" };\n    var num_rat = { token: \"constant.numeric\", regex: \"[+-.]?\\\\d[\\\\d_]*(?:(?:\\\\.\\\\d[\\\\d_]*)?(?:[eE][+-]?\\\\d[\\\\d_]*)?)?i?\\\\b\" };\n    var booleans = { token: \"constant.language.boolean\", regex: \"(?:True|False)\\\\b\" };\n    var versions = { token: \"constant.other\", regex: \"v[0-9](?:\\\\.[a-zA-Z0-9*])*\\\\b\" };\n    var lang_keywords = { token: keywordMapper, regex: \"[a-zA-Z][\\\\:a-zA-Z0-9_-]*\\\\b\" };\n    var variables = { token: \"variable.language\", regex: \"[$@%&][?*!.]?[a-zA-Z0-9_-]+\\\\b\" };\n    var vars_special = { token: \"variable.language\", regex: \"\\\\$[/|!]?|@\\\\$/\" };\n    var ops_char = { token: \"keyword.operator\", regex: \"=|<|>|\\\\+|\\\\*|-|/|~|%|\\\\?|!|\\\\^|\\\\.|\\\\:|\\\\,|\" +\n            \"»|«|\\\\||\\\\&|⚛|∘\" };\n    var constants_unicode = { token: \"constant.language\", regex: \"𝑒|π|τ|∞\" };\n    var qstrings = { token: \"string.quoted.single\", regex: \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\" };\n    var word_quoting = { token: \"string.quoted.single\", regex: \"[<](?:[a-zA-Z0-9 ])*[>]\" };\n    var regexp = {\n        token: \"string.regexp\",\n        regex: \"[m|rx]?[/](?:(?:\\\\[(?:\\\\\\\\]|[^\\\\]])+\\\\])|(?:\\\\\\\\/|[^\\\\]/]))*[/]\\\\w*\\\\s*(?=[).,;]|$)\"\n    };\n    this.$rules = {\n        \"start\": [\n            {\n                token: \"comment.block\", // Embedded Comments - Parentheses\n                regex: \"#[`|=]\\\\(.*\\\\)\"\n            }, {\n                token: \"comment.block\", // Embedded Comments - Brackets\n                regex: \"#[`|=]\\\\[.*\\\\]\"\n            }, {\n                token: \"comment.doc\", // Multiline Comments\n                regex: \"^=(?:begin)\\\\b\",\n                next: \"block_comment\"\n            }, {\n                token: \"string.unquoted\", // q Heredocs\n                regex: \"q[x|w]?\\\\:to/END/;\",\n                next: \"qheredoc\"\n            }, {\n                token: \"string.unquoted\", // qq Heredocs\n                regex: \"qq[x|w]?\\\\:to/END/;\",\n                next: \"qqheredoc\"\n            },\n            regexp,\n            qstrings,\n            {\n                token: \"string.quoted.double\", // Double Quoted String\n                regex: '\"',\n                next: \"qqstring\"\n            },\n            word_quoting,\n            {\n                token: [\"keyword\", \"text\", \"variable.module\"], // use - Module Names, Pragmas, etc.\n                regex: \"(use)(\\\\s+)((?:\" + moduleName + \"\\\\.?)*)\"\n            },\n            hex,\n            num_rat,\n            booleans,\n            versions,\n            lang_keywords,\n            variables,\n            vars_special,\n            ops_char,\n            constants_unicode,\n            {\n                token: \"comment\", // Sigle Line Comments\n                regex: \"#.*$\"\n            }, {\n                token: \"lparen\",\n                regex: \"[[({]\"\n            }, {\n                token: \"rparen\",\n                regex: \"[\\\\])}]\"\n            }, {\n                token: \"text\",\n                regex: \"\\\\s+\"\n            }\n        ],\n        \"qqstring\": [\n            {\n                token: \"constant.language.escape\",\n                regex: '\\\\\\\\(?:[nrtef\\\\\\\\\"$]|[0-7]{1,3}|x[0-9A-Fa-f]{1,2})'\n            },\n            variables,\n            vars_special,\n            {\n                token: \"lparen\",\n                regex: \"{\",\n                next: \"qqinterpolation\"\n            }, {\n                token: \"string.quoted.double\",\n                regex: '\"',\n                next: \"start\"\n            }, {\n                defaultToken: \"string.quoted.double\"\n            }\n        ],\n        \"qqinterpolation\": [\n            hex,\n            num_rat,\n            booleans,\n            versions,\n            lang_keywords,\n            variables,\n            vars_special,\n            ops_char,\n            constants_unicode,\n            qstrings,\n            regexp,\n            {\n                token: \"rparen\",\n                regex: \"}\",\n                next: \"qqstring\"\n            }\n        ],\n        \"block_comment\": [\n            {\n                token: \"comment.doc\",\n                regex: \"^=end +[a-zA-Z_0-9]*\",\n                next: \"start\"\n            },\n            {\n                defaultToken: \"comment.doc\"\n            }\n        ],\n        \"qheredoc\": [\n            {\n                token: \"string.unquoted\",\n                regex: \"END$\",\n                next: \"start\"\n            }, {\n                defaultToken: \"string.unquoted\"\n            }\n        ],\n        \"qqheredoc\": [\n            variables,\n            vars_special,\n            {\n                token: \"lparen\",\n                regex: \"{\",\n                next: \"qqheredocinterpolation\"\n            }, {\n                token: \"string.unquoted\",\n                regex: \"END$\",\n                next: \"start\"\n            }, {\n                defaultToken: \"string.unquoted\"\n            }\n        ],\n        \"qqheredocinterpolation\": [\n            hex,\n            num_rat,\n            booleans,\n            versions,\n            lang_keywords,\n            variables,\n            vars_special,\n            ops_char,\n            constants_unicode,\n            qstrings,\n            regexp,\n            {\n                token: \"rparen\",\n                regex: \"}\",\n                next: \"qqheredoc\"\n            }\n        ]\n    };\n};\noop.inherits(RakuHighlightRules, TextHighlightRules);\nexports.RakuHighlightRules = RakuHighlightRules;\n\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(require, exports, module){\"use strict\";\nvar Range = require(\"../range\").Range;\nvar MatchingBraceOutdent = function () { };\n(function () {\n    this.checkOutdent = function (line, input) {\n        if (!/^\\s+$/.test(line))\n            return false;\n        return /^\\s*\\}/.test(input);\n    };\n    this.autoOutdent = function (doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n        if (!match)\n            return 0;\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({ row: row, column: column });\n        if (!openBracePos || openBracePos.row == row)\n            return 0;\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n    this.$getIndent = function (line) {\n        return line.match(/^\\s*/)[0];\n    };\n}).call(MatchingBraceOutdent.prototype);\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n        this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n        return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                }\n                else if (foldStyle != \"all\")\n                    range = null;\n            }\n            return range;\n        }\n        if (foldStyle === \"markbegin\")\n            return;\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    this.getSectionRange = function (session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                }\n                else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                }\n                else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m)\n                continue;\n            if (m[1])\n                depth--;\n            else\n                depth++;\n            if (!depth)\n                break;\n        }\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/raku\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/raku_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/mode/folding/cstyle\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar RakuHighlightRules = require(\"./raku_highlight_rules\").RakuHighlightRules;\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\nvar Mode = function () {\n    this.HighlightRules = RakuHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.foldingRules = new CStyleFoldMode({ start: \"^=(begin)\\\\b\", end: \"^=(end)\\\\b\" });\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.lineCommentStart = \"#\";\n    this.blockComment = [\n        { start: \"=begin\", end: \"=end\", lineStartOnly: true },\n        { start: \"=item\", end: \"=end\", lineStartOnly: true }\n    ];\n    this.getNextLineIndent = function (state, line, tab) {\n        var indent = this.$getIndent(line);\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n        if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\n            return indent;\n        }\n        if (state == \"start\") {\n            var match = line.match(/^.*[\\{\\(\\[:]\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n        return indent;\n    };\n    this.checkOutdent = function (state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n    this.autoOutdent = function (state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n    this.$id = \"ace/mode/raku\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/raku\"], function(m) {\n                        if ( true && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            \n\n//# sourceURL=webpack://robot-karol-4/./node_modules/ace-builds/src-noconflict/mode-raku.js?");

/***/ })

}]);