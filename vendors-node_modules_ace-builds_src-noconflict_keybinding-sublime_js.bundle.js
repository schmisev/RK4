/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkrobot_karol_4"] = self["webpackChunkrobot_karol_4"] || []).push([["vendors-node_modules_ace-builds_src-noconflict_keybinding-sublime_js"],{

/***/ "./node_modules/ace-builds/src-noconflict/keybinding-sublime.js":
/*!**********************************************************************!*\
  !*** ./node_modules/ace-builds/src-noconflict/keybinding-sublime.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nace.define(\"ace/keyboard/sublime\",[\"require\",\"exports\",\"module\",\"ace/keyboard/hash_handler\"], function(require, exports, module){\"use strict\";\nvar HashHandler = require(\"../keyboard/hash_handler\").HashHandler;\nfunction moveBySubWords(editor, direction, extend) {\n    var selection = editor.selection;\n    var row = selection.lead.row;\n    var column = selection.lead.column;\n    var line = editor.session.getLine(row);\n    if (!line[column + direction]) {\n        var method = (extend ? \"selectWord\" : \"moveCursorShortWord\")\n            + (direction == 1 ? \"Right\" : \"Left\");\n        return editor.selection[method]();\n    }\n    if (direction == -1)\n        column--;\n    while (line[column]) {\n        var type = getType(line[column]) + getType(line[column + direction]);\n        column += direction;\n        if (direction == 1) {\n            if (type == \"WW\" && getType(line[column + 1]) == \"w\")\n                break;\n        }\n        else {\n            if (type == \"wW\") {\n                if (getType(line[column - 1]) == \"W\") {\n                    column -= 1;\n                    break;\n                }\n                else {\n                    continue;\n                }\n            }\n            if (type == \"Ww\")\n                break;\n        }\n        if (/w[s_oW]|_[sWo]|o[s_wW]|s[W]|W[so]/.test(type))\n            break;\n    }\n    if (direction == -1)\n        column++;\n    if (extend)\n        editor.selection.moveCursorTo(row, column);\n    else\n        editor.selection.moveTo(row, column);\n    function getType(x) {\n        if (!x)\n            return \"-\";\n        if (/\\s/.test(x))\n            return \"s\";\n        if (x == \"_\")\n            return \"_\";\n        if (x.toUpperCase() == x && x.toLowerCase() != x)\n            return \"W\";\n        if (x.toUpperCase() != x && x.toLowerCase() == x)\n            return \"w\";\n        return \"o\";\n    }\n}\nexports.handler = new HashHandler();\nexports.handler.addCommands([{\n        name: \"find_all_under\",\n        exec: function (editor) {\n            if (editor.selection.isEmpty())\n                editor.selection.selectWord();\n            editor.findAll();\n        },\n        readOnly: true\n    }, {\n        name: \"find_under\",\n        exec: function (editor) {\n            if (editor.selection.isEmpty())\n                editor.selection.selectWord();\n            editor.findNext();\n        },\n        readOnly: true\n    }, {\n        name: \"find_under_prev\",\n        exec: function (editor) {\n            if (editor.selection.isEmpty())\n                editor.selection.selectWord();\n            editor.findPrevious();\n        },\n        readOnly: true\n    }, {\n        name: \"find_under_expand\",\n        exec: function (editor) {\n            editor.selectMore(1, false, true);\n        },\n        scrollIntoView: \"animate\",\n        readOnly: true\n    }, {\n        name: \"find_under_expand_skip\",\n        exec: function (editor) {\n            editor.selectMore(1, true, true);\n        },\n        scrollIntoView: \"animate\",\n        readOnly: true\n    }, {\n        name: \"delete_to_hard_bol\",\n        exec: function (editor) {\n            var pos = editor.selection.getCursor();\n            editor.session.remove({\n                start: { row: pos.row, column: 0 },\n                end: pos\n            });\n        },\n        multiSelectAction: \"forEach\",\n        scrollIntoView: \"cursor\"\n    }, {\n        name: \"delete_to_hard_eol\",\n        exec: function (editor) {\n            var pos = editor.selection.getCursor();\n            editor.session.remove({\n                start: pos,\n                end: { row: pos.row, column: Infinity }\n            });\n        },\n        multiSelectAction: \"forEach\",\n        scrollIntoView: \"cursor\"\n    }, {\n        name: \"moveToWordStartLeft\",\n        exec: function (editor) {\n            editor.selection.moveCursorLongWordLeft();\n            editor.clearSelection();\n        },\n        multiSelectAction: \"forEach\",\n        scrollIntoView: \"cursor\"\n    }, {\n        name: \"moveToWordEndRight\",\n        exec: function (editor) {\n            editor.selection.moveCursorLongWordRight();\n            editor.clearSelection();\n        },\n        multiSelectAction: \"forEach\",\n        scrollIntoView: \"cursor\"\n    }, {\n        name: \"selectToWordStartLeft\",\n        exec: function (editor) {\n            var sel = editor.selection;\n            sel.$moveSelection(sel.moveCursorLongWordLeft);\n        },\n        multiSelectAction: \"forEach\",\n        scrollIntoView: \"cursor\"\n    }, {\n        name: \"selectToWordEndRight\",\n        exec: function (editor) {\n            var sel = editor.selection;\n            sel.$moveSelection(sel.moveCursorLongWordRight);\n        },\n        multiSelectAction: \"forEach\",\n        scrollIntoView: \"cursor\"\n    }, {\n        name: \"selectSubWordRight\",\n        exec: function (editor) {\n            moveBySubWords(editor, 1, true);\n        },\n        multiSelectAction: \"forEach\",\n        scrollIntoView: \"cursor\",\n        readOnly: true\n    }, {\n        name: \"selectSubWordLeft\",\n        exec: function (editor) {\n            moveBySubWords(editor, -1, true);\n        },\n        multiSelectAction: \"forEach\",\n        scrollIntoView: \"cursor\",\n        readOnly: true\n    }, {\n        name: \"moveSubWordRight\",\n        exec: function (editor) {\n            moveBySubWords(editor, 1);\n        },\n        multiSelectAction: \"forEach\",\n        scrollIntoView: \"cursor\",\n        readOnly: true\n    }, {\n        name: \"moveSubWordLeft\",\n        exec: function (editor) {\n            moveBySubWords(editor, -1);\n        },\n        multiSelectAction: \"forEach\",\n        scrollIntoView: \"cursor\",\n        readOnly: true\n    }]);\n[{\n        bindKey: { mac: \"cmd-k cmd-backspace|cmd-backspace\", win: \"ctrl-shift-backspace|ctrl-k ctrl-backspace\" },\n        name: \"removetolinestarthard\"\n    }, {\n        bindKey: { mac: \"cmd-k cmd-k|cmd-delete|ctrl-k\", win: \"ctrl-shift-delete|ctrl-k ctrl-k\" },\n        name: \"removetolineendhard\"\n    }, {\n        bindKey: { mac: \"cmd-shift-d\", win: \"ctrl-shift-d\" },\n        name: \"duplicateSelection\"\n    }, {\n        bindKey: { mac: \"cmd-l\", win: \"ctrl-l\" },\n        name: \"expandtoline\"\n    },\n    {\n        bindKey: { mac: \"cmd-shift-a\", win: \"ctrl-shift-a\" },\n        name: \"expandSelection\",\n        args: { to: \"tag\" }\n    }, {\n        bindKey: { mac: \"cmd-shift-j\", win: \"ctrl-shift-j\" },\n        name: \"expandSelection\",\n        args: { to: \"indentation\" }\n    }, {\n        bindKey: { mac: \"ctrl-shift-m\", win: \"ctrl-shift-m\" },\n        name: \"expandSelection\",\n        args: { to: \"brackets\" }\n    }, {\n        bindKey: { mac: \"cmd-shift-space\", win: \"ctrl-shift-space\" },\n        name: \"expandSelection\",\n        args: { to: \"scope\" }\n    },\n    {\n        bindKey: { mac: \"ctrl-cmd-g\", win: \"alt-f3\" },\n        name: \"find_all_under\"\n    }, {\n        bindKey: { mac: \"alt-cmd-g\", win: \"ctrl-f3\" },\n        name: \"find_under\"\n    }, {\n        bindKey: { mac: \"shift-alt-cmd-g\", win: \"ctrl-shift-f3\" },\n        name: \"find_under_prev\"\n    }, {\n        bindKey: { mac: \"cmd-g\", win: \"f3\" },\n        name: \"findnext\"\n    }, {\n        bindKey: { mac: \"shift-cmd-g\", win: \"shift-f3\" },\n        name: \"findprevious\"\n    }, {\n        bindKey: { mac: \"cmd-d\", win: \"ctrl-d\" },\n        name: \"find_under_expand\"\n    }, {\n        bindKey: { mac: \"cmd-k cmd-d\", win: \"ctrl-k ctrl-d\" },\n        name: \"find_under_expand_skip\"\n    },\n    {\n        bindKey: { mac: \"cmd-alt-[\", win: \"ctrl-shift-[\" },\n        name: \"toggleFoldWidget\"\n    }, {\n        bindKey: { mac: \"cmd-alt-]\", win: \"ctrl-shift-]\" },\n        name: \"unfold\"\n    }, {\n        bindKey: { mac: \"cmd-k cmd-0|cmd-k cmd-j\", win: \"ctrl-k ctrl-0|ctrl-k ctrl-j\" },\n        name: \"unfoldall\"\n    }, {\n        bindKey: { mac: \"cmd-k cmd-1\", win: \"ctrl-k ctrl-1\" },\n        name: \"foldOther\",\n        args: { level: 1 }\n    },\n    {\n        bindKey: { win: \"ctrl-left\", mac: \"alt-left\" },\n        name: \"moveToWordStartLeft\"\n    }, {\n        bindKey: { win: \"ctrl-right\", mac: \"alt-right\" },\n        name: \"moveToWordEndRight\"\n    }, {\n        bindKey: { win: \"ctrl-shift-left\", mac: \"alt-shift-left\" },\n        name: \"selectToWordStartLeft\"\n    }, {\n        bindKey: { win: \"ctrl-shift-right\", mac: \"alt-shift-right\" },\n        name: \"selectToWordEndRight\"\n    },\n    {\n        bindKey: { mac: \"ctrl-alt-shift-right|ctrl-shift-right\", win: \"alt-shift-right\" },\n        name: \"selectSubWordRight\"\n    }, {\n        bindKey: { mac: \"ctrl-alt-shift-left|ctrl-shift-left\", win: \"alt-shift-left\" },\n        name: \"selectSubWordLeft\"\n    }, {\n        bindKey: { mac: \"ctrl-alt-right|ctrl-right\", win: \"alt-right\" },\n        name: \"moveSubWordRight\"\n    }, {\n        bindKey: { mac: \"ctrl-alt-left|ctrl-left\", win: \"alt-left\" },\n        name: \"moveSubWordLeft\"\n    },\n    {\n        bindKey: { mac: \"ctrl-m\", win: \"ctrl-m\" },\n        name: \"jumptomatching\",\n        args: { to: \"brackets\" }\n    },\n    {\n        bindKey: { mac: \"ctrl-f6\", win: \"ctrl-f6\" },\n        name: \"goToNextError\"\n    }, {\n        bindKey: { mac: \"ctrl-shift-f6\", win: \"ctrl-shift-f6\" },\n        name: \"goToPreviousError\"\n    },\n    {\n        bindKey: { mac: \"ctrl-o\" },\n        name: \"splitline\"\n    },\n    {\n        bindKey: { mac: \"ctrl-shift-w\", win: \"alt-shift-w\" },\n        name: \"surrowndWithTag\"\n    }, {\n        bindKey: { mac: \"cmd-alt-.\", win: \"alt-.\" },\n        name: \"close_tag\"\n    },\n    {\n        bindKey: { mac: \"cmd-j\", win: \"ctrl-j\" },\n        name: \"joinlines\"\n    },\n    {\n        bindKey: { mac: \"ctrl--\", win: \"alt--\" },\n        name: \"jumpBack\"\n    }, {\n        bindKey: { mac: \"ctrl-shift--\", win: \"alt-shift--\" },\n        name: \"jumpForward\"\n    },\n    {\n        bindKey: { mac: \"cmd-k cmd-l\", win: \"ctrl-k ctrl-l\" },\n        name: \"tolowercase\"\n    }, {\n        bindKey: { mac: \"cmd-k cmd-u\", win: \"ctrl-k ctrl-u\" },\n        name: \"touppercase\"\n    },\n    {\n        bindKey: { mac: \"cmd-shift-v\", win: \"ctrl-shift-v\" },\n        name: \"paste_and_indent\"\n    }, {\n        bindKey: { mac: \"cmd-k cmd-v|cmd-alt-v\", win: \"ctrl-k ctrl-v\" },\n        name: \"paste_from_history\"\n    },\n    {\n        bindKey: { mac: \"cmd-shift-enter\", win: \"ctrl-shift-enter\" },\n        name: \"addLineBefore\"\n    }, {\n        bindKey: { mac: \"cmd-enter\", win: \"ctrl-enter\" },\n        name: \"addLineAfter\"\n    }, {\n        bindKey: { mac: \"ctrl-shift-k\", win: \"ctrl-shift-k\" },\n        name: \"removeline\"\n    }, {\n        bindKey: { mac: \"ctrl-alt-up\", win: \"ctrl-up\" },\n        name: \"scrollup\"\n    }, {\n        bindKey: { mac: \"ctrl-alt-down\", win: \"ctrl-down\" },\n        name: \"scrolldown\"\n    }, {\n        bindKey: { mac: \"cmd-a\", win: \"ctrl-a\" },\n        name: \"selectall\"\n    }, {\n        bindKey: { linux: \"alt-shift-down\", mac: \"ctrl-shift-down\", win: \"ctrl-alt-down\" },\n        name: \"addCursorBelow\"\n    }, {\n        bindKey: { linux: \"alt-shift-up\", mac: \"ctrl-shift-up\", win: \"ctrl-alt-up\" },\n        name: \"addCursorAbove\"\n    },\n    {\n        bindKey: { mac: \"cmd-k cmd-c|ctrl-l\", win: \"ctrl-k ctrl-c\" },\n        name: \"centerselection\"\n    },\n    {\n        bindKey: { mac: \"f5\", win: \"f9\" },\n        name: \"sortlines\"\n    },\n    {\n        bindKey: { mac: \"ctrl-f5\", win: \"ctrl-f9\" },\n        name: \"sortlines\",\n        args: { caseSensitive: true }\n    },\n    {\n        bindKey: { mac: \"cmd-shift-l\", win: \"ctrl-shift-l\" },\n        name: \"splitSelectionIntoLines\"\n    }, {\n        bindKey: { mac: \"ctrl-cmd-down\", win: \"ctrl-shift-down\" },\n        name: \"movelinesdown\"\n    }, {\n        bindKey: { mac: \"ctrl-cmd-up\", win: \"ctrl-shift-up\" },\n        name: \"movelinesup\"\n    }, {\n        bindKey: { mac: \"alt-down\", win: \"alt-down\" },\n        name: \"modifyNumberDown\"\n    }, {\n        bindKey: { mac: \"alt-up\", win: \"alt-up\" },\n        name: \"modifyNumberUp\"\n    }, {\n        bindKey: { mac: \"cmd-/\", win: \"ctrl-/\" },\n        name: \"togglecomment\"\n    }, {\n        bindKey: { mac: \"cmd-alt-/\", win: \"ctrl-shift-/\" },\n        name: \"toggleBlockComment\"\n    },\n    {\n        bindKey: { linux: \"ctrl-alt-q\", mac: \"ctrl-q\", win: \"ctrl-q\" },\n        name: \"togglerecording\"\n    }, {\n        bindKey: { linux: \"ctrl-alt-shift-q\", mac: \"ctrl-shift-q\", win: \"ctrl-shift-q\" },\n        name: \"replaymacro\"\n    },\n    {\n        bindKey: { mac: \"ctrl-t\", win: \"ctrl-t\" },\n        name: \"transpose\"\n    }\n].forEach(function (binding) {\n    var command = exports.handler.commands[binding.name];\n    if (command)\n        command.bindKey = binding.bindKey;\n    exports.handler.bindKey(binding.bindKey, command || binding.name);\n});\n\n});                (function() {\n                    ace.require([\"ace/keyboard/sublime\"], function(m) {\n                        if ( true && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            \n\n//# sourceURL=webpack://robot-karol-4/./node_modules/ace-builds/src-noconflict/keybinding-sublime.js?");

/***/ })

}]);