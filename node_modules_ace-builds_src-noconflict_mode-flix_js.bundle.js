/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkrobot_karol_4"] = self["webpackChunkrobot_karol_4"] || []).push([["node_modules_ace-builds_src-noconflict_mode-flix_js"],{

/***/ "./node_modules/ace-builds/src-noconflict/mode-flix.js":
/*!*************************************************************!*\
  !*** ./node_modules/ace-builds/src-noconflict/mode-flix.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nace.define(\"ace/mode/flix_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar FlixHighlightRules = function () {\n    var keywords = (\"use|checked_cast|checked_ecast|unchecked_cast|masked_cast|as|discard|from|\" +\n        \"into|inject|project|solve|query|where|select|force|import|region|red|deref\");\n    var controlKeywords = (\"choose|debug|do|for|forA|forM|foreach|yield|if|else|case|\" +\n        \"match|typematch|try|catch|resume|spawn|par|branch|jumpto\");\n    var operators = \"not|and|or|fix\";\n    var declarations = \"eff|def|law|enum|case|type|alias|class|instance|mod|let\";\n    var modifiers = \"with|without|opaque|lazy|lawful|pub|override|sealed|static\";\n    var primitives = \"Unit|Bool|Char|Float32|Float64|Int8|Int16|Int32|Int64|BigInt|String\";\n    var keywordMapper = this.createKeywordMapper({\n        \"keyword\": keywords,\n        \"keyword.control\": controlKeywords,\n        \"keyword.operator\": operators,\n        \"storage.type\": declarations,\n        \"storage.modifier\": modifiers,\n        \"support.type\": primitives\n    }, \"identifier\");\n    this.$rules = {\n        \"start\": [\n            {\n                token: \"comment.line\",\n                regex: \"\\\\/\\\\/.*$\"\n            }, {\n                token: \"comment.block\",\n                regex: \"\\\\/\\\\*\",\n                next: \"comment\"\n            }, {\n                token: \"string\",\n                regex: '\"',\n                next: \"string\"\n            }, {\n                token: \"string.regexp\",\n                regex: 'regex\"',\n                next: \"regex\"\n            }, {\n                token: \"constant.character\",\n                regex: \"'\",\n                next: \"char\"\n            }, {\n                token: \"constant.numeric\", // hex\n                regex: \"0x[a-fA-F0-9](_*[a-fA-F0-9])*(i8|i16|i32|i64|ii)?\\\\b\"\n            }, {\n                token: \"constant.numeric\", // float\n                regex: \"[0-9](_*[0-9])*\\\\.[0-9](_*[0-9])*(f32|f64)?\\\\b\"\n            }, {\n                token: \"constant.numeric\", // integer\n                regex: \"[0-9](_*[0-9])*(i8|i16|i32|i64|ii)?\\\\b\"\n            }, {\n                token: \"constant.language.boolean\",\n                regex: \"(true|false)\\\\b\"\n            }, {\n                token: \"constant.language\",\n                regex: \"null\\\\b\"\n            }, {\n                token: \"keyword.operator\",\n                regex: \"\\\\->|~>|<\\\\-|=>\"\n            }, {\n                token: \"storage.modifier\",\n                regex: \"@(Deprecated|Experimental|Internal|ParallelWhenPure|Parallel|LazyWhenPure|Lazy|Skip|Test)\\\\b\"\n            }, {\n                token: \"keyword\", // hole\n                regex: \"(\\\\?\\\\?\\\\?|\\\\?[a-zA-Z0-9]+)\"\n            }, {\n                token: keywordMapper,\n                regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n            }, {\n                token: \"paren.lparen\",\n                regex: \"[[({]\"\n            }, {\n                token: \"paren.rparen\",\n                regex: \"[\\\\])}]\"\n            }, {\n                token: \"text\",\n                regex: \"\\\\s+\"\n            }\n        ],\n        \"comment\": [\n            {\n                token: \"comment.block\",\n                regex: \"\\\\*\\\\/\",\n                next: \"start\"\n            }, {\n                defaultToken: \"comment.block\"\n            }\n        ],\n        \"string\": [\n            {\n                token: \"constant.character.escape\", // unicode\n                regex: \"\\\\\\\\(u[0-9a-fA-F]{4})\"\n            }, {\n                token: \"constant.character.escape\",\n                regex: '\\\\\\\\.'\n            }, {\n                token: \"string\",\n                regex: '\"',\n                next: \"start\"\n            }, {\n                token: \"string\",\n                regex: '[^\"\\\\\\\\]+'\n            }\n        ],\n        \"regex\": [\n            {\n                token: \"constant.character.escape\", // unicode\n                regex: \"\\\\\\\\(u[0-9a-fA-F]{4})\"\n            }, {\n                token: \"constant.character.escape\",\n                regex: '\\\\\\\\.'\n            }, {\n                token: \"string.regexp\",\n                regex: '\"',\n                next: \"start\"\n            }, {\n                token: \"string.regexp\",\n                regex: '[^\"\\\\\\\\]+'\n            }\n        ],\n        \"char\": [\n            {\n                token: \"constant.character.escape\", // unicode\n                regex: \"\\\\\\\\(u[0-9a-fA-F]{4})\"\n            }, {\n                token: \"constant.character.escape\",\n                regex: '\\\\\\\\.'\n            }, {\n                token: \"constant.character\",\n                regex: \"'\",\n                next: \"start\"\n            }, {\n                token: \"constant.character\",\n                regex: \"[^'\\\\\\\\]+\"\n            }\n        ]\n    };\n};\noop.inherits(FlixHighlightRules, TextHighlightRules);\nexports.FlixHighlightRules = FlixHighlightRules;\n\n});\n\nace.define(\"ace/mode/flix\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/flix_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar FlixHighlightRules = require(\"./flix_highlight_rules\").FlixHighlightRules;\nvar Mode = function () {\n    this.HighlightRules = FlixHighlightRules;\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.$id = \"ace/mode/flix\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/flix\"], function(m) {\n                        if ( true && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            \n\n//# sourceURL=webpack://robot-karol-4/./node_modules/ace-builds/src-noconflict/mode-flix.js?");

/***/ })

}]);