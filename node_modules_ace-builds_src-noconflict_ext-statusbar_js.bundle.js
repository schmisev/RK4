/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkrobot_karol_4"] = self["webpackChunkrobot_karol_4"] || []).push([["node_modules_ace-builds_src-noconflict_ext-statusbar_js"],{

/***/ "./node_modules/ace-builds/src-noconflict/ext-statusbar.js":
/*!*****************************************************************!*\
  !*** ./node_modules/ace-builds/src-noconflict/ext-statusbar.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nace.define(\"ace/ext/statusbar\",[\"require\",\"exports\",\"module\",\"ace/lib/dom\",\"ace/lib/lang\"], function(require, exports, module){\"use strict\";\nvar dom = require(\"../lib/dom\");\nvar lang = require(\"../lib/lang\");\nvar StatusBar = /** @class */ (function () {\n    function StatusBar(editor, parentNode) {\n        this.element = dom.createElement(\"div\");\n        this.element.className = \"ace_status-indicator\";\n        this.element.style.cssText = \"display: inline-block;\";\n        parentNode.appendChild(this.element);\n        var statusUpdate = lang.delayedCall(function () {\n            this.updateStatus(editor);\n        }.bind(this)).schedule.bind(null, 100);\n        editor.on(\"changeStatus\", statusUpdate);\n        editor.on(\"changeSelection\", statusUpdate);\n        editor.on(\"keyboardActivity\", statusUpdate);\n    }\n    StatusBar.prototype.updateStatus = function (editor) {\n        var status = [];\n        function add(str, separator) {\n            str && status.push(str, separator || \"|\");\n        }\n        add(editor.keyBinding.getStatusText(editor));\n        if (editor.commands.recording)\n            add(\"REC\");\n        var sel = editor.selection;\n        var c = sel.lead;\n        if (!sel.isEmpty()) {\n            var r = editor.getSelectionRange();\n            add(\"(\" + (r.end.row - r.start.row) + \":\" + (r.end.column - r.start.column) + \")\", \" \");\n        }\n        add(c.row + \":\" + c.column, \" \");\n        if (sel.rangeCount)\n            add(\"[\" + sel.rangeCount + \"]\", \" \");\n        status.pop();\n        this.element.textContent = status.join(\"\");\n    };\n    return StatusBar;\n}());\nexports.StatusBar = StatusBar;\n\n});                (function() {\n                    ace.require([\"ace/ext/statusbar\"], function(m) {\n                        if ( true && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            \n\n//# sourceURL=webpack://robot-karol-4/./node_modules/ace-builds/src-noconflict/ext-statusbar.js?");

/***/ })

}]);