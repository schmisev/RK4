/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkrobot_karol_4"] = self["webpackChunkrobot_karol_4"] || []).push([["node_modules_ace-builds_src-noconflict_mode-mixal_js"],{

/***/ "./node_modules/ace-builds/src-noconflict/mode-mixal.js":
/*!**************************************************************!*\
  !*** ./node_modules/ace-builds/src-noconflict/mode-mixal.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nace.define(\"ace/mode/mixal_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar MixalHighlightRules = function () {\n    var isValidSymbol = function (string) {\n        return string && string.search(/^[A-Z\\u0394\\u03a0\\u03a30-9]{1,10}$/) > -1 && string.search(/[A-Z\\u0394\\u03a0\\u03a3]/) > -1;\n    };\n    var isValidOp = function (op) {\n        return op && [\n            'NOP', 'ADD', 'FADD', 'SUB', 'FSUB', 'MUL', 'FMUL', 'DIV', 'FDIV', 'NUM', 'CHAR', 'HLT',\n            'SLA', 'SRA', 'SLAX', 'SRAX', 'SLC', 'SRC', 'MOVE', 'LDA', 'LD1', 'LD2', 'LD3', 'LD4',\n            'LD5', 'LD6', 'LDX', 'LDAN', 'LD1N', 'LD2N', 'LD3N', 'LD4N', 'LD5N', 'LD6N', 'LDXN',\n            'STA', 'ST1', 'ST2', 'ST3', 'ST4', 'ST5', 'ST6', 'STX', 'STJ', 'STZ', 'JBUS', 'IOC',\n            'IN', 'OUT', 'JRED', 'JMP', 'JSJ', 'JOV', 'JNOV', 'JL', 'JE', 'JG', 'JGE', 'JNE', 'JLE',\n            'JAN', 'JAZ', 'JAP', 'JANN', 'JANZ', 'JANP', 'J1N', 'J1Z', 'J1P', 'J1NN', 'J1NZ',\n            'J1NP', 'J2N', 'J2Z', 'J2P', 'J2NN', 'J2NZ', 'J2NP', 'J3N', 'J3Z', 'J3P', 'J3NN', 'J3NZ',\n            'J3NP', 'J4N', 'J4Z', 'J4P', 'J4NN', 'J4NZ', 'J4NP', 'J5N', 'J5Z', 'J5P', 'J5NN',\n            'J5NZ', 'J5NP', 'J6N', 'J6Z', 'J6P', 'J6NN', 'J6NZ', 'J6NP', 'JXN', 'JXZ', 'JXP',\n            'JXNN', 'JXNZ', 'JXNP', 'INCA', 'DECA', 'ENTA', 'ENNA', 'INC1', 'DEC1', 'ENT1', 'ENN1',\n            'INC2', 'DEC2', 'ENT2', 'ENN2', 'INC3', 'DEC3', 'ENT3', 'ENN3', 'INC4', 'DEC4', 'ENT4',\n            'ENN4', 'INC5', 'DEC5', 'ENT5', 'ENN5', 'INC6', 'DEC6', 'ENT6', 'ENN6', 'INCX', 'DECX',\n            'ENTX', 'ENNX', 'CMPA', 'FCMP', 'CMP1', 'CMP2', 'CMP3', 'CMP4', 'CMP5', 'CMP6', 'CMPX',\n            'EQU', 'ORIG', 'CON', 'ALF', 'END'\n        ].indexOf(op) > -1;\n    };\n    var containsOnlySupportedCharacters = function (string) {\n        return string && string.search(/[^ A-Z\\u0394\\u03a0\\u03a30-9.,()+*/=$<>@;:'-]/) == -1;\n    };\n    this.$rules = {\n        \"start\": [{\n                token: \"comment.line.character\",\n                regex: /^ *\\*.*$/\n            }, {\n                token: function (label, space0, keyword, space1, literal, comment) {\n                    return [\n                        isValidSymbol(label) ? \"variable.other\" : \"invalid.illegal\",\n                        \"text\",\n                        \"keyword.control\",\n                        \"text\",\n                        containsOnlySupportedCharacters(literal) ? \"text\" : \"invalid.illegal\",\n                        \"comment.line.character\"\n                    ];\n                },\n                regex: /^(\\S+)?( +)(ALF)(  )(.{5})(\\s+.*)?$/\n            }, {\n                token: function (label, space0, keyword, space1, literal, comment) {\n                    return [\n                        isValidSymbol(label) ? \"variable.other\" : \"invalid.illegal\",\n                        \"text\",\n                        \"keyword.control\",\n                        \"text\",\n                        containsOnlySupportedCharacters(literal) ? \"text\" : \"invalid.illegal\",\n                        \"comment.line.character\"\n                    ];\n                },\n                regex: /^(\\S+)?( +)(ALF)( )(\\S.{4})(\\s+.*)?$/\n            }, {\n                token: function (label, space0, op, comment) {\n                    return [\n                        isValidSymbol(label) ? \"variable.other\" : \"invalid.illegal\",\n                        \"text\",\n                        isValidOp(op) ? \"keyword.control\" : \"invalid.illegal\",\n                        \"comment.line.character\"\n                    ];\n                },\n                regex: /^(\\S+)?( +)(\\S+)(?:\\s*)$/\n            }, {\n                token: function (label, space0, op, space1, address, comment) {\n                    return [\n                        isValidSymbol(label) ? \"variable.other\" : \"invalid.illegal\",\n                        \"text\",\n                        isValidOp(op) ? \"keyword.control\" : \"invalid.illegal\",\n                        \"text\",\n                        containsOnlySupportedCharacters(address) ? \"text\" : \"invalid.illegal\",\n                        \"comment.line.character\"\n                    ];\n                },\n                regex: /^(\\S+)?( +)(\\S+)( +)(\\S+)(\\s+.*)?$/\n            }, {\n                defaultToken: \"text\"\n            }]\n    };\n};\noop.inherits(MixalHighlightRules, TextHighlightRules);\nexports.MixalHighlightRules = MixalHighlightRules;\n\n});\n\nace.define(\"ace/mode/mixal\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/mixal_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar MixalHighlightRules = require(\"./mixal_highlight_rules\").MixalHighlightRules;\nvar Mode = function () {\n    this.HighlightRules = MixalHighlightRules;\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.$id = \"ace/mode/mixal\";\n    this.lineCommentStart = \"*\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/mixal\"], function(m) {\n                        if ( true && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            \n\n//# sourceURL=webpack://robot-karol-4/./node_modules/ace-builds/src-noconflict/mode-mixal.js?");

/***/ })

}]);