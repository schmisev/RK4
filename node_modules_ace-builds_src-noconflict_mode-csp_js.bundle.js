/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkrobot_karol_4"] = self["webpackChunkrobot_karol_4"] || []).push([["node_modules_ace-builds_src-noconflict_mode-csp_js"],{

/***/ "./node_modules/ace-builds/src-noconflict/mode-csp.js":
/*!************************************************************!*\
  !*** ./node_modules/ace-builds/src-noconflict/mode-csp.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nace.define(\"ace/mode/csp_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){/*\n    EXPLANATION\n\n    This highlight rules were created to help developer spot typos when working\n    with Content-Security-Policy (CSP). See:\n    https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/\n */\n\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar CspHighlightRules = function () {\n    var keywordMapper = this.createKeywordMapper({\n        \"constant.language\": \"child-src|connect-src|default-src|font-src|frame-src|img-src|manifest-src|media-src|object-src\"\n            + \"|script-src|style-src|worker-src|base-uri|plugin-types|sandbox|disown-opener|form-action|frame-ancestors|report-uri\"\n            + \"|report-to|upgrade-insecure-requests|block-all-mixed-content|require-sri-for|reflected-xss|referrer|policy-uri\",\n        \"variable\": \"'none'|'self'|'unsafe-inline'|'unsafe-eval'|'strict-dynamic'|'unsafe-hashed-attributes'\"\n    }, \"identifier\", true);\n    this.$rules = {\n        start: [{\n                token: \"string.link\",\n                regex: /https?:[^;\\s]*/\n            }, {\n                token: \"operator.punctuation\",\n                regex: /;/\n            }, {\n                token: keywordMapper,\n                regex: /[^\\s;]+/\n            }]\n    };\n};\noop.inherits(CspHighlightRules, TextHighlightRules);\nexports.CspHighlightRules = CspHighlightRules;\n\n});\n\nace.define(\"ace/mode/csp\",[\"require\",\"exports\",\"module\",\"ace/mode/text\",\"ace/mode/csp_highlight_rules\",\"ace/lib/oop\"], function(require, exports, module){/*\n  THIS FILE WAS AUTOGENERATED BY mode.tmpl.js\n*/\n\"use strict\";\nvar TextMode = require(\"./text\").Mode;\nvar CspHighlightRules = require(\"./csp_highlight_rules\").CspHighlightRules;\nvar oop = require(\"../lib/oop\");\nvar Mode = function () {\n    this.HighlightRules = CspHighlightRules;\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.$id = \"ace/mode/csp\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/csp\"], function(m) {\n                        if ( true && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            \n\n//# sourceURL=webpack://robot-karol-4/./node_modules/ace-builds/src-noconflict/mode-csp.js?");

/***/ })

}]);