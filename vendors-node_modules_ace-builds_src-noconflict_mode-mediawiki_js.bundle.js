/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkrobot_karol_4"] = self["webpackChunkrobot_karol_4"] || []).push([["vendors-node_modules_ace-builds_src-noconflict_mode-mediawiki_js"],{

/***/ "./node_modules/ace-builds/src-noconflict/mode-mediawiki.js":
/*!******************************************************************!*\
  !*** ./node_modules/ace-builds/src-noconflict/mode-mediawiki.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nace.define(\"ace/mode/mediawiki_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar MediaWikiHighlightRules = function () {\n    this.$rules = {\n        start: [{\n                include: \"#switch\"\n            }, {\n                include: \"#redirect\"\n            }, {\n                include: \"#variable\"\n            }, {\n                include: \"#comment\"\n            }, {\n                include: \"#entity\"\n            }, {\n                include: \"#emphasis\"\n            }, {\n                include: \"#tag\"\n            }, {\n                include: \"#table\"\n            }, {\n                include: \"#hr\"\n            }, {\n                include: \"#heading\"\n            }, {\n                include: \"#link\"\n            }, {\n                include: \"#list\"\n            }, {\n                include: \"#template\"\n            }],\n        \"#hr\": [{\n                token: \"markup.bold\",\n                regex: /^[-]{4,}/\n            }],\n        \"#switch\": [{\n                token: \"constant.language\",\n                regex: /(__NOTOC__|__FORCETOC__|__TOC__|__NOEDITSECTION__|__NEWSECTIONLINK__|__NONEWSECTIONLINK__|__NOWYSIWYG__|__NOGALLERY__|__HIDDENCAT__|__EXPECTUNUSEDCATEGORY__|__NOCONTENTCONVERT__|__NOCC__|__NOTITLECONVERT__|__NOTC__|__START__|__END__|__INDEX__|__NOINDEX__|__STATICREDIRECT__|__NOGLOBAL__|__DISAMBIG__)/\n            }],\n        \"#redirect\": [{\n                token: [\n                    \"keyword.control.redirect\",\n                    \"meta.keyword.control\"\n                ],\n                regex: /(^#REDIRECT|^#redirect|^#Redirect)(\\s+)/\n            }],\n        \"#variable\": [{\n                token: \"storage.type.variable\",\n                regex: /{{{/,\n                push: [{\n                        token: \"storage.type.variable\",\n                        regex: /}}}/,\n                        next: \"pop\"\n                    }, {\n                        token: [\n                            \"text\",\n                            \"variable.other\",\n                            \"text\",\n                            \"keyword.operator\"\n                        ],\n                        regex: /(\\s*)(\\w+)(\\s*)((?:\\|)?)/\n                    }, {\n                        defaultToken: \"storage.type.variable\"\n                    }]\n            }],\n        \"#entity\": [{\n                token: \"constant.character.entity\",\n                regex: /&\\w+;/\n            }],\n        \"#list\": [{\n                token: \"markup.bold\",\n                regex: /^[#*;:]+/,\n                push: [{\n                        token: \"markup.list\",\n                        regex: /$/,\n                        next: \"pop\"\n                    }, {\n                        include: \"$self\"\n                    }, {\n                        defaultToken: \"markup.list\"\n                    }]\n            }],\n        \"#template\": [{\n                token: [\n                    \"storage.type.function\",\n                    \"meta.template\",\n                    \"entity.name.function\",\n                    \"meta.template\"\n                ],\n                regex: /({{)(\\s*)([#\\w: ]+)(\\s*)/,\n                push: [{\n                        token: \"storage.type.function\",\n                        regex: /}}/,\n                        next: \"pop\"\n                    }, {\n                        token: [\n                            \"storage\",\n                            \"meta.structure.dictionary\",\n                            \"support.type.property-name\",\n                            \"meta.structure.dictionary\",\n                            \"punctuation.separator.dictionary.key-value\",\n                            \"meta.structure.dictionary\",\n                            \"meta.structure.dictionary.value\"\n                        ],\n                        regex: /(\\|)(\\s*)([a-zA-Z-]*)(\\s*)(=)(\\s*)([^|}]*)/,\n                        push: [{\n                                token: \"meta.structure.dictionary\",\n                                regex: /(?=}}|[|])/,\n                                next: \"pop\"\n                            }, {\n                                defaultToken: \"meta.structure.dictionary\"\n                            }]\n                    }, {\n                        token: [\"storage\", \"meta.template.value\"],\n                        regex: /(\\|)(.*?)/,\n                        push: [{\n                                token: [],\n                                regex: /(?=}}|[|])/,\n                                next: \"pop\"\n                            }, {\n                                include: \"$self\"\n                            }, {\n                                defaultToken: \"meta.template.value\"\n                            }]\n                    }, {\n                        defaultToken: \"meta.template\"\n                    }]\n            }],\n        \"#link\": [{\n                token: [\n                    \"punctuation.definition.tag.begin\",\n                    \"meta.tag.link.internal\",\n                    \"entity.name.tag\",\n                    \"meta.tag.link.internal\",\n                    \"string.other.link.title\",\n                    \"meta.tag.link.internal\",\n                    \"punctuation.definition.tag\"\n                ],\n                regex: /(\\[\\[)(\\s*)((?:Category|Wikipedia)?)(:?)([^\\]\\]\\|]+)(\\s*)((?:\\|)*)/,\n                push: [{\n                        token: \"punctuation.definition.tag.end\",\n                        regex: /\\]\\]/,\n                        next: \"pop\"\n                    }, {\n                        include: \"$self\"\n                    }, {\n                        defaultToken: \"meta.tag.link.internal\"\n                    }]\n            }, {\n                token: [\n                    \"punctuation.definition.tag.begin\",\n                    \"meta.tag.link.external\",\n                    \"meta.tag.link.external\",\n                    \"string.unquoted\",\n                    \"punctuation.definition.tag.end\"\n                ],\n                regex: /(\\[)(.*?)([\\s]+)(.*?)(\\])/\n            }],\n        \"#comment\": [{\n                token: \"punctuation.definition.comment.html\",\n                regex: /<!--/,\n                push: [{\n                        token: \"punctuation.definition.comment.html\",\n                        regex: /-->/,\n                        next: \"pop\"\n                    }, {\n                        defaultToken: \"comment.block.html\"\n                    }]\n            }],\n        \"#emphasis\": [{\n                token: [\n                    \"punctuation.definition.tag.begin\",\n                    \"markup.italic.bold\",\n                    \"punctuation.definition.tag.end\"\n                ],\n                regex: /(''''')(?!')(.*?)('''''|$)/\n            }, {\n                token: [\n                    \"punctuation.definition.tag.begin\",\n                    \"markup.bold\",\n                    \"punctuation.definition.tag.end\"\n                ],\n                regex: /(''')(?!')(.*?)('''|$)/\n            }, {\n                token: [\n                    \"punctuation.definition.tag.begin\",\n                    \"markup.italic\",\n                    \"punctuation.definition.tag.end\"\n                ],\n                regex: /('')(?!')(.*?)(''|$)/\n            }],\n        \"#heading\": [{\n                token: [\n                    \"punctuation.definition.heading\",\n                    \"entity.name.section\",\n                    \"punctuation.definition.heading\"\n                ],\n                regex: /(={1,6})(.+?)(\\1)(?!=)/\n            }],\n        \"#tag\": [{\n                token: [\n                    \"punctuation.definition.tag.begin\",\n                    \"entity.name.tag\",\n                    \"meta.tag.block.ref\",\n                    \"punctuation.definition.tag.end\"\n                ],\n                regex: /(<)(ref)((?:\\s+.*?)?)(>)/,\n                caseInsensitive: true,\n                push: [{\n                        token: [\n                            \"punctuation.definition.tag.begin\",\n                            \"entity.name.tag\",\n                            \"meta.tag.block.ref\",\n                            \"punctuation.definition.tag.end\"\n                        ],\n                        regex: /(<\\/)(ref)(\\s*)(>)/,\n                        caseInsensitive: true,\n                        next: \"pop\"\n                    }, {\n                        include: \"$self\"\n                    }, {\n                        defaultToken: \"meta.tag.block.ref\"\n                    }]\n            },\n            {\n                token: [\n                    \"punctuation.definition.tag.begin\",\n                    \"entity.name.tag\",\n                    \"meta.tag.block.nowiki\",\n                    \"punctuation.definition.tag.end\"\n                ],\n                regex: /(<)(nowiki)((?:\\s+.*?)?)(>)/,\n                caseInsensitive: true,\n                push: [{\n                        token: [\n                            \"punctuation.definition.tag.begin\",\n                            \"entity.name.tag\",\n                            \"meta.tag.block.nowiki\",\n                            \"punctuation.definition.tag.end\"\n                        ],\n                        regex: /(<\\/)(nowiki)(\\s*)(>)/,\n                        caseInsensitive: true,\n                        next: \"pop\"\n                    }, {\n                        defaultToken: \"meta.tag.block.nowiki\"\n                    }]\n            }, {\n                token: [\n                    \"punctuation.definition.tag.begin\",\n                    \"entity.name.tag\"\n                ],\n                regex: /(<\\/?)(noinclude|includeonly|onlyinclude)(?=\\W)/,\n                caseInsensitive: true,\n                push: [{\n                        token: [\n                            \"invalid.illegal\",\n                            \"punctuation.definition.tag.end\"\n                        ],\n                        regex: /((?:\\/)?)(>)/,\n                        next: \"pop\"\n                    }, {\n                        include: \"#attribute\"\n                    }, {\n                        defaultToken: \"meta.tag.block.any\"\n                    }]\n            }, {\n                token: [\n                    \"punctuation.definition.tag.begin\",\n                    \"entity.name.tag\"\n                ],\n                regex: /(<)(br|wbr|hr|meta|link)(?=\\W)/,\n                caseInsensitive: true,\n                push: [{\n                        token: \"punctuation.definition.tag.end\",\n                        regex: /\\/?>/,\n                        next: \"pop\"\n                    }, {\n                        include: \"#attribute\"\n                    }, {\n                        defaultToken: \"meta.tag.other\"\n                    }]\n            }, {\n                token: [\n                    \"punctuation.definition.tag.begin\",\n                    \"entity.name.tag\"\n                ],\n                regex: /(<\\/?)(div|center|span|h1|h2|h3|h4|h5|h6|bdo|em|strong|cite|dfn|code|samp|kbd|var|abbr|blockquote|q|sub|sup|p|pre|ins|del|ul|ol|li|dl|dd|dt|table|caption|thead|tfoot|tbody|colgroup|col|tr|td|th|a|img|video|source|track|tt|b|i|big|small|strike|s|u|font|ruby|rb|rp|rt|rtc|math|figure|figcaption|bdi|data|time|mark|html)(?=\\W)/,\n                caseInsensitive: true,\n                push: [{\n                        token: [\n                            \"invalid.illegal\",\n                            \"punctuation.definition.tag.end\"\n                        ],\n                        regex: /((?:\\/)?)(>)/,\n                        next: \"pop\"\n                    }, {\n                        include: \"#attribute\"\n                    }, {\n                        defaultToken: \"meta.tag.block\"\n                    }]\n            }, {\n                token: [\n                    \"punctuation.definition.tag.begin\",\n                    \"invalid.illegal\"\n                ],\n                regex: /(<\\/)(br|wbr|hr|meta|link)(?=\\W)/,\n                caseInsensitive: true,\n                push: [{\n                        token: \"punctuation.definition.tag.end\",\n                        regex: /\\/?>/,\n                        next: \"pop\"\n                    }, {\n                        include: \"#attribute\"\n                    }, {\n                        defaultToken: \"meta.tag.other\"\n                    }]\n            }],\n        \"#caption\": [{\n                token: [\n                    \"meta.tag.block.table-caption\",\n                    \"punctuation.definition.tag.begin\"\n                ],\n                regex: /^(\\s*)(\\|\\+)/,\n                push: [{\n                        token: \"meta.tag.block.table-caption\",\n                        regex: /$/,\n                        next: \"pop\"\n                    }, {\n                        defaultToken: \"meta.tag.block.table-caption\"\n                    }]\n            }],\n        \"#tr\": [{\n                token: [\n                    \"meta.tag.block.tr\",\n                    \"punctuation.definition.tag.begin\",\n                    \"meta.tag.block.tr\",\n                    \"invalid.illegal\"\n                ],\n                regex: /^(\\s*)(\\|\\-)([\\s]*)(.*)/\n            }],\n        \"#th\": [{\n                token: [\n                    \"meta.tag.block.th.heading\",\n                    \"punctuation.definition.tag.begin\",\n                    \"meta.tag.block.th.heading\",\n                    \"punctuation.definition.tag\",\n                    \"markup.bold\"\n                ],\n                regex: /^(\\s*)(!)(?:(.*?)(\\|))?(.*?)(?=!!|$)/,\n                push: [{\n                        token: \"meta.tag.block.th.heading\",\n                        regex: /$/,\n                        next: \"pop\"\n                    }, {\n                        token: [\n                            \"punctuation.definition.tag.begin\",\n                            \"meta.tag.block.th.inline\",\n                            \"punctuation.definition.tag\",\n                            \"markup.bold\"\n                        ],\n                        regex: /(!!)(?:(.*?)(\\|))?(.*?)(?=!!|$)/\n                    }, {\n                        include: \"$self\"\n                    }, {\n                        defaultToken: \"meta.tag.block.th.heading\"\n                    }]\n            }],\n        \"#td\": [{\n                token: [\n                    \"meta.tag.block.td\",\n                    \"punctuation.definition.tag.begin\"\n                ],\n                regex: /^(\\s*)(\\|)/,\n                push: [{\n                        token: \"meta.tag.block.td\",\n                        regex: /$/,\n                        next: \"pop\"\n                    }, {\n                        include: \"$self\"\n                    }, {\n                        defaultToken: \"meta.tag.block.td\"\n                    }]\n            }],\n        \"#table\": [{\n                patterns: [{\n                        name: \"meta.tag.block.table\",\n                        begin: \"^\\\\s*({\\\\|)(.*?)$\",\n                        end: \"^\\\\s*\\\\|}\",\n                        beginCaptures: {\n                            1: {\n                                name: \"punctuation.definition.tag.begin\"\n                            },\n                            2: {\n                                patterns: [{\n                                        include: \"#attribute\"\n                                    }]\n                            },\n                            3: {\n                                name: \"invalid.illegal\"\n                            }\n                        },\n                        endCaptures: {\n                            0: {\n                                name: \"punctuation.definition.tag.end\"\n                            }\n                        },\n                        patterns: [{\n                                include: \"#comment\"\n                            }, {\n                                include: \"#template\"\n                            }, {\n                                include: \"#caption\"\n                            }, {\n                                include: \"#tr\"\n                            }, {\n                                include: \"#th\"\n                            }, {\n                                include: \"#td\"\n                            }]\n                    }],\n                repository: {\n                    caption: {\n                        name: \"meta.tag.block.table-caption\",\n                        begin: \"^\\\\s*(\\\\|\\\\+)\",\n                        end: \"$\",\n                        beginCaptures: {\n                            1: {\n                                name: \"punctuation.definition.tag.begin\"\n                            }\n                        }\n                    },\n                    tr: {\n                        name: \"meta.tag.block.tr\",\n                        match: \"^\\\\s*(\\\\|\\\\-)[\\\\s]*(.*)\",\n                        captures: {\n                            1: {\n                                name: \"punctuation.definition.tag.begin\"\n                            },\n                            2: {\n                                name: \"invalid.illegal\"\n                            }\n                        }\n                    },\n                    th: {\n                        name: \"meta.tag.block.th.heading\",\n                        begin: \"^\\\\s*(!)((.*?)(\\\\|))?(.*?)(?=(!!)|$)\",\n                        end: \"$\",\n                        beginCaptures: {\n                            1: {\n                                name: \"punctuation.definition.tag.begin\"\n                            },\n                            3: {\n                                patterns: [{\n                                        include: \"#attribute\"\n                                    }]\n                            },\n                            4: {\n                                name: \"punctuation.definition.tag\"\n                            },\n                            5: {\n                                name: \"markup.bold\"\n                            }\n                        },\n                        patterns: [{\n                                name: \"meta.tag.block.th.inline\",\n                                match: \"(!!)((.*?)(\\\\|))?(.*?)(?=(!!)|$)\",\n                                captures: {\n                                    1: {\n                                        name: \"punctuation.definition.tag.begin\"\n                                    },\n                                    3: {\n                                        patterns: [{\n                                                include: \"#attribute\"\n                                            }]\n                                    },\n                                    4: {\n                                        name: \"punctuation.definition.tag\"\n                                    },\n                                    5: {\n                                        name: \"markup.bold\"\n                                    }\n                                }\n                            }, {\n                                include: \"$self\"\n                            }]\n                    },\n                    td: {\n                        name: \"meta.tag.block.td\",\n                        begin: \"^\\\\s*(\\\\|)\",\n                        end: \"$\",\n                        beginCaptures: {\n                            1: {\n                                name: \"punctuation.definition.tag.begin\"\n                            },\n                            2: {\n                                patterns: [{\n                                        include: \"#attribute\"\n                                    }]\n                            },\n                            3: {\n                                name: \"punctuation.definition.tag\"\n                            }\n                        },\n                        patterns: [{\n                                include: \"$self\"\n                            }]\n                    }\n                }\n            }],\n        \"#attribute\": [{\n                include: \"#string\"\n            }, {\n                token: \"entity.other.attribute-name\",\n                regex: /\\w+/\n            }],\n        \"#string\": [{\n                token: \"string.quoted.double\",\n                regex: /\\\"/,\n                push: [{\n                        token: \"string.quoted.double\",\n                        regex: /\\\"/,\n                        next: \"pop\"\n                    }, {\n                        defaultToken: \"string.quoted.double\"\n                    }]\n            }, {\n                token: \"string.quoted.single\",\n                regex: /\\'/,\n                push: [{\n                        token: \"string.quoted.single\",\n                        regex: /\\'/,\n                        next: \"pop\"\n                    }, {\n                        defaultToken: \"string.quoted.single\"\n                    }]\n            }],\n        \"#url\": [{\n                token: \"markup.underline.link\",\n                regex: /(?:http(?:s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:\\/?#\\[\\]@!\\$&'\\(\\)\\*\\+,;=.]+/\n            }, {\n                token: \"invalid.illegal\",\n                regex: /.*/\n            }]\n    };\n    this.normalizeRules();\n};\nMediaWikiHighlightRules.metaData = {\n    name: \"MediaWiki\",\n    scopeName: \"text.html.mediawiki\",\n    fileTypes: [\"mediawiki\", \"wiki\"]\n};\noop.inherits(MediaWikiHighlightRules, TextHighlightRules);\nexports.MediaWikiHighlightRules = MediaWikiHighlightRules;\n\n});\n\nace.define(\"ace/mode/mediawiki\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/mediawiki_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar MediaWikiHighlightRules = require(\"./mediawiki_highlight_rules\").MediaWikiHighlightRules;\nvar Mode = function () {\n    this.HighlightRules = MediaWikiHighlightRules;\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.type = \"text\";\n    this.blockComment = { start: \"<!--\", end: \"-->\" };\n    this.$id = \"ace/mode/mediawiki\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/mediawiki\"], function(m) {\n                        if ( true && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            \n\n//# sourceURL=webpack://robot-karol-4/./node_modules/ace-builds/src-noconflict/mode-mediawiki.js?");

/***/ })

}]);