# Großer Testcode
[ Funktionsdefinition ]
Funktion pow(Zahl basis, Zahl exponent)
    Zahl ausgabe ist 1
    wiederhole exponent mal
        ausgabe ist ausgabe * basis
    ende
    zurück ausgabe
ende

[ Methodendefinition ]
Methode stapeln(Zahl n) für Roboter
    wiederhole n mal
        hinlegen()
    ende
ende

Methode abräumen() für Roboter
    wiederhole solange siehtZiegel()
        aufheben()
    ende
ende

Methode zeileAbräumen() für Roboter
    wiederhole 2 mal
        wiederhole solange nicht siehtWand()
            abräumen()
            schritt()
        ende
    ende
ende

[ Klassendefinition ]
Klasse Vektor2
    Zahl x ist 0
    Zahl y ist 0
    
    Methode plus(Zahl dx, Zahl dy)
        x ist x + dx
        y ist y + dy
    ende

    Methode skalieren(Zahl f)
        x ist x * f
        y ist y * f
    ende
ende

[ Hauptprogramm ]
wenn welt.teilaufgabe() = 1 dann
# Erstes Level

zeig pow(3, 5)
zeig k1.linksDrehen()
zeig k1.stapeln(3)

k2.rechtsDrehen()
k2.schritt()
k2.linksDrehen()

wiederhole 3 mal
    k2.abräumen()
    k2.linksDrehen()
    k2.schritt()
    k2.rechtsDrehen()
ende

k2.schritt()
k2.rechtsDrehen()
k2.schritt()
k2.markeSetzen()

k1.abräumen()
k1.schritt()
k1.linksDrehen()
k1.schritt()
k1.markeEntfernen()
k1.schritt()
k1.rechtsDrehen()

wiederhole 2 mal
    k1.abräumen()
    k1.rechtsDrehen()
    k1.schritt()
    k1.linksDrehen()
ende

wiederhole solange nicht welt.fertig()
    k1.hinlegen()
ende

sonst
# Zweites Level
wiederhole 2 mal
    k1.zeileAbräumen()
    k2.zeileAbräumen()
    k1.linksDrehen()
    k2.linksDrehen()
    k1.abräumen()
    k2.abräumen()
    k1.schritt()
    k2.schritt()
    k1.linksDrehen()
    k2.linksDrehen()
ende

ende
